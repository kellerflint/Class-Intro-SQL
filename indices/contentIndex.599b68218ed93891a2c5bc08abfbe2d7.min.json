{"/":{"title":"Landing Page","content":"Hi there! This is a hosted obsidian notebook with lessons and resources for all of the courses I teach.\n\n# Courses\n### [[SQL _ Lesson Index]]\n\n### [[AI _ Lesson Index]]\n\n# Temp or Shared Resources\n\n[[MISC - Node Lessons]]\n\n[[MISC - Node Demo]]\n","lastmodified":"2024-06-02T23:20:19.213799918Z","tags":[]},"/AI-Final-Project-Assignment":{"title":"AI - Final Project Assignment","content":"\n# Final Project Assignment\n\nFor your final project in this course, you have the opportunity to dive into an AI topic that interests you. Much like your work in the capstone, these projects are open ended and likely to include elements we haven't covered deeply in class. You are expected to do some of your own research and make good use of tools and resources (such as google, online tutorials and generative AI) to assist you. Feel free to contact me if you're having trouble figuring out where to start!\n\nThere are several broad categories of project I'd encourage you to choose from:\n1. Statistical Model:\n    - Select a dataset (I'd suggest starting with [Kaggle](https://www.kaggle.com/datasets) but you are welcome to look elsewhere) and perform data cleaning and preparation.\n    - Discuss and / or correct any biases that may be present in the data.\n    - Develop a statistical / traditional model to analyze the data.\n    - Create informative metrics and visuals to evaluate the model's performance.\n    - Provide insights into what the model learned from the data.\n    - Present your work in a well-documented notebook that clearly explains your processes and conclusions.\n    - Potential areas to explore: feature selection, feature engineering, model selection, hyperparameter tuning, cross-validation, regularization techniques, handling imbalanced data, and more. You don't need to use all of these, but pick a few techniques to implement in your project.\n2. Reinforcement Learning Task:\n    - Choose a reinforcement learning environment from the gym library (beyond CartPole). [Classic Control](https://gymnasium.farama.org/environments/classic_control/), [Box2D](https://gymnasium.farama.org/environments/box2d/) may be good options or pick another environment that seems interesting to you.\n    - Implement a solution to solve the selected task. Use metrics and visuals to show your model's performance against an agent taking random actions.\n    - Document your work in a notebook that walks through each step of your code and explains your approach to solving the problem.\n    - Discuss the challenges you encountered and the strategies you employed to overcome them.\n    - Analyze the performance of your reinforcement learning agent and provide insights into its learning process.\n3. AI-Powered Application:\n    - Create an application that significantly incorporates an LLM or other AI components using the Langchain framework.\n    - Utilize chains, tools, agents, and / or memory in Langchain to enhance the functionality and interactivity of your application.\n    - Leverage AI to generate comprehensive documentation for your code. Develop a high-quality README file that clearly and concisely explains the components of your project and highlights the areas where AI is utilized.\n    - Demonstrate the practical application and benefits of integrating AI into your project.\n4. Open-Ended Project:\n    - If you have a unique project idea that doesn't fit within the above categories, feel free to propose it.\n    - Discuss your project idea with me to ensure it aligns with the course objectives and requirements.\n\nDeliverables:\n1. Code and Technical Documentation:\n    - Submit your project code either as a well-documented notebook or as a GitHub repository.\n    - For notebooks, include detailed markdown explanations alongside your code.\n    - For GitHub repositories, create a comprehensive README file that serves as the technical documentation for your project.\n    - Collaborate with AI to ensure high-quality documentation that clearly explains your project's purpose, functionality, and implementation details.\n2. Presentation and Slides (5-8 minutes):\n    - During finals week you will present out on your project and what you learned.\n\t- You may include a BRIEF technical demo but the focus should be on presenting and explaining the work you did to a semi-technical audience at a high level. Your classmates and I have some background in AI but not the specifics of the approaches you took or the problem you solved. Keep this audience in mind.\n    - Create engaging and informative presentation slides.\n    - Consider leverage AI to help generate concise text and review your content.\n    - Create visually appealing slides that effectively communicate your project's key points.\n\nI encourage you to leverage AI throughout your final project. Claude Sonnet, GPT-4o and Llama3-70B are likely to be your best options for powerful models that can be accessed for free. Utilize AI to assist with planning your project, code documentation, writing, and slide creation. Effective use of AI can enable you to focus on the core aspects of your project and enhance the quality of your deliverables. Just be mindful of their limitations and always review and validate the generated content to ensure accuracy and relevance.\n\nIf you have any questions or need further guidance, don't hesitate to reach out. I'm looking forward to seeing the projects you create!","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W1-A-Brief-History-of-AI":{"title":"AI - W1 A Brief History of AI","content":"# A Brief History of AI\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=172da466-e0a5-48af-986e-b145005637f4\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Cool Things to Explore (Optional)\n- Great documentary on AlphaGo AI - [AlphaGo - The Movie | Full award-winning documentary (youtube.com)](https://www.youtube.com/watch?v=WXuK6gekU1Y) (1 hour 30 minutes)\n- Watson Playing Jeopardy: [Watson and the Jeopardy! Challenge (youtube.com)](https://www.youtube.com/watch?v=P18EdAKuC1U) (4 minutes)\n- OpenAI vs Dota 2 Pros Match [TI9 CHAMPION OG vs OpenAI Final Version 2019 - Game 1 (youtube.com)](https://www.youtube.com/watch?v=t4il-QagP5w)\n- [Eliza, a chatbot therapist (njit.edu)](https://web.njit.edu/~ronkowit/eliza.html)\n\n# Lessons\n- [[AI - W1 Introduction]]\n- AI - W1 A Brief History of AI\n- Next: [[AI - W1 AI Tasks and Types of Machine Learning]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W1-AI-Tasks-and-Types-of-Machine-Learning":{"title":"AI - W1 AI Tasks and Types of Machine Learning","content":"# AI Tasks and Types of Machine Learning\n\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=6f841154-530c-499c-ae9f-b145010e5e6e\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Lessons\n- [[AI - W1 Introduction]]\n- [[AI - W1 A Brief History of AI]]\n- AI - W1 AI Tasks and Types of Learning","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W1-Introduction":{"title":"AI - W1 Introduction","content":"\n# Week 1 Introduction\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=ea3a6a71-3e98-4584-8d09-b1430152af4a\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Learning Objectives\n*These topics are what will be covered in this week's knowledge check and entry ticket quiz.*\n- Understand the course structure, expectations and requirements.\n- Define Artificial Intelligence (AI) and Machine Learning (ML) in your own words.\n- Explain (at a high level, no need to memorize dates) the eras of AI, what enabled neural networks and deep learning techniques in the last 15 years, and the \"black box\" and \"bias\" problems in ML models.\n- Understand how Artificial Intelligence, Machine Learning, Neural Networks, Deep Learning, and Generative AI relate to each other.\n- Understand the types of common tasks in AI (no need to memorize the techniques, just make sure to understand the task categories and kinds of data / scenarios they deal with).\n- Understand the differences in approach between Supervised Learning, Unsupervised Learning, Reinforcement Learning, and Evolutionary Learning.\n- Explore the current landscape and opportunities in AI and the expected impact of AI on jobs (resources for these are included in this week's discussion post assignment).\n\n# Weekly Schedule\n\n- ### Tuesday:\n    - Open office hours from 1-3pm\n    - Assignment is due by 3pm\n    - Knowledge check is due by 3pm\n\n- ### Thursday (before class):\n\t- Discussion post is due by 1pm\n\n- ### Thursday (during in-person class):\n    - Entry ticket quiz\n    - In-class discussion and activities\n    - I'll introduce the next week's content in the last ~15 minutes of class\n    - The next week's module (lessons, assignment, knowledge check and discussion) will be published on Canvas after class\n\nLate work will be penalized 10% per day, up to a maximum of 50%, unless an extension is arranged with the instructor in advance of the due date.\n\n# Lessons\n- AI - W1 Course Introduction\n- Next: [[AI - W1 A Brief History of AI]]\n- [[AI - W1 AI Tasks and Types of Machine Learning]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W2-Assignment-Multiple-Linear-Regression":{"title":"AI - W2 Assignment - Multiple Linear Regression","content":"\n# Assignment - Multiple Linear Regression\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=1eb1e8a7-d650-4e3a-8eb8-b14a005b8b26\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Multiple Linear Regression Assignment\" \u003e\u003c/iframe\u003e\n\n### Instructions\n1. Find a dataset suitable for multiple linear regression analysis. [Find Open Datasets and Machine Learning Projects | Kaggle](https://www.kaggle.com/datasets?sort=votes\u0026tags=13405-Linear+Regression)\n2. Select the columns (features) you want to use as predictor variables and the column you want to predict (target variable).\n3. Create a multiple linear regression model using the selected columns.\n4. Use the model to predict the target variable.\n5. Make your Colab notebook accessible to anyone with the link (Share -\u003e General Access -\u003e Change from \"Restricted\" to \"Anyone with the Link\" can view)\n### Evaluation\n- Appropriate selection of dataset and columns for multiple linear regression\n- Correct implementation of the multiple linear regression model\n- Successful prediction of the target variable using the model\n- Clear and well-documented code\n\n### Submission\nSubmit your assignment by providing a link to your Colab notebook to the assignment in Canvas. If you worked locally, export your document as an HTML or PDF file and upload that file to the assignment Canvas.\n\n# Lessons\n- [[AI - W2 Introduction]]\n- [[AI - W2 Jupyter Notebooks and Google Colab]]\n- [[AI - W2 Python Refresher and Pandas]]\n- [[AI - W2 Statistical Modeling and Implementing Linear Regression]]\n- AI - W2 Assignment - Multiple Linear Regression","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W2-Introduction":{"title":"AI - W2 Introduction","content":"\n# Week 2 Learning Objectives\n*These topics are what will be covered in this week's knowledge check and entry ticket quiz.*\n- Understand traditional machine learning models and explain the advantages that traditional models can have over neural networks.\n- Understand the difference between simple and multiple linear regression.\n- Explain how simple and multiple linear regression models make predictions and why they are generally considered to be explainable / interpretable models.\n- Explain the steps required to implement a linear regression model in Python using scikit-learn to predict a continuous output variable from input variable(s).\n- Interpret the coefficients and intercept of a fitted linear regression model to understand the learned relationship between input and output variables.\n- Use Python and Pandas to train models and manipulate data frames (you will not have to write code during quizzes but you may have to explain or interpret what some Python / Pandas code does).\n\n# Lessons\n- AI - W2 Introduction\n- Next: [[AI - W2 Jupyter Notebooks and Google Colab]]\n- [[AI - W2 Python Refresher and Pandas]]\n- [[AI - W2 Statistical Modeling and Implementing Linear Regression]]\n- [[AI - W2 Assignment - Multiple Linear Regression]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W2-Jupyter-Notebooks-and-Google-Colab":{"title":"AI - W2 Jupyter Notebooks and Google Colab","content":"# Jupyter Notebooks and Google Colab\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=10252dd6-bcc4-42b0-afc8-b146017bc3b4\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Lessons\n- [[AI - W2 Introduction]]\n- AI - W2 Jupyter Notebooks and Google Colab\n- Next: [[AI - W2 Python Refresher and Pandas]]\n- [[AI - W2 Statistical Modeling and Implementing Linear Regression]]\n- [[AI - W2 Assignment - Multiple Linear Regression]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W2-Python-Refresher-and-Pandas":{"title":"AI - W2 Python Refresher and Pandas","content":"# Python Refresher and Pandas\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=c20eaed3-0118-4728-b43a-b1470159390c\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Lessons\n- [[AI - W2 Introduction]]\n- [[AI - W2 Jupyter Notebooks and Google Colab]]\n- AI - W2 Python Refresher and Pandas\n- Next: [[AI - W2 Statistical Modeling and Implementing Linear Regression]]\n- [[AI - W2 Assignment - Multiple Linear Regression]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W2-Statistical-Modeling-and-Implementing-Linear-Regression":{"title":"AI - W2 Statistical Modeling and Implementing Linear Regression","content":"# Statistical Modeling and Implementing Linear Regression\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=9c4076e5-f9a2-4979-b054-b14a0052d8cd\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Linear Regression\" \u003e\u003c/iframe\u003e\n\n### Links\nStudy Hours Dataset: [Student Study Hours (kaggle.com)](https://www.kaggle.com/datasets/himanshunakrani/student-study-hours/data?select=score.csv)\nAdmissions Dataset: [Data for Admission in the University (kaggle.com)](https://www.kaggle.com/datasets/akshaydattatraykhare/data-for-admission-in-the-university)\n\nMy Notebook: https://colab.research.google.com/drive/1h3-bCRU2JQ5VqFLbshVIK84HlITYwV6Q?usp=sharing\n# Lessons\n- [[AI - W2 Introduction]]\n- [[AI - W2 Jupyter Notebooks and Google Colab]]\n- [[AI - W2 Python Refresher and Pandas]]\n- AI - W2 Statistical Modeling and Implementing Linear Regression\n- Next: [[AI - W2 Assignment - Multiple Linear Regression]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W3-Assignment-Decision-Trees-Random-Forests-and-Model-Validation":{"title":"AI - W3 Assignment - Decision Trees, Random Forests and Model Validation","content":"\n# Assignment - Decision Trees, Random Forests and Model Validation\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=ca716ba9-b927-422e-9d5e-b151012bee7e\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"W3 Kaggle Assignment Intro\" \u003e\u003c/iframe\u003e\n\nKaggle Lessons: [Learn Intro to Machine Learning | Kaggle](https://www.kaggle.com/learn/intro-to-machine-learning)\n\nI **highly recommend** watching both of these videos to help give a more visual and intuitive understanding of how decision trees and random forests function:\n- Recommended: [Visual Guide to Decision Trees (youtube.com)](https://www.youtube.com/watch?v=zs6yHVtxyv8\u0026list=PLRZZr7RFUUmXfON6dvwtkaaqf9oV_C1LF\u0026index=6\u0026ab_channel=Econoscent) (6 minutes)\n- **REQUIRED**: [Visual Guide to Random Forests (youtube.com)](https://www.youtube.com/watch?v=cIbj0WuK41w\u0026list=PLRZZr7RFUUmXfON6dvwtkaaqf9oV_C1LF\u0026index=6\u0026ab_channel=Econoscent) (5 minutes)\n\n# Lessons\n- [[AI - W3 Introduction]]\n- [[AI - W3 Model Validation]]\n- AI - W3 Assignment - Decision Trees, Random Forests and Model Validation","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W3-Introduction":{"title":"AI - W3 Introduction","content":"# Week 3 Learning Objectives\n*These topics are what will be covered in this week's knowledge check and entry ticket quiz.*\n- Understand traditional machine learning models and the differences between linear regression, decision trees and random forests.\n- Understand the importance of model validation and testing the model's performance on unseen data.\n- Explain the concept of mean squared error (MSE) as a metric to evaluate the performance of a model.\n- Interpret differences in MSE scores and their implications for model performance.\n- Explain the concept of overfitting and why it can be a problem for ML models.\n- Implement the train-test split technique using scikit-learn's train_test_split function to divide the dataset into separate training and testing subsets. \n- Train a linear regression model on the training data, and evaluate its performance on the unseen testing data using MSE.\n*(You will not have to write code during quizzes but understand the process such that you could explain it or interpret what some Python / Pandas code does).*\n# Lessons\n- AI - W3 Introduction\n- Next: [[AI - W3 Model Validation]]\n- [[AI - W3 Assignment - Decision Trees, Random Forests and Model Validation]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W3-Model-Validation":{"title":"AI - W3 Model Validation","content":"\n# Model Validation\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=dad362ad-668d-45d5-b58c-b1510120224e\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"MSE and Train Test Split\" \u003e\u003c/iframe\u003e\n\n# Lessons\n- [[AI - W3 Introduction]]\n- AI - W3 Model Validation\n- Next: [[AI - W3 Assignment - Decision Trees, Random Forests and Model Validation]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W4-Assignment-Introduction-to-Deep-Learning":{"title":"AI - W4 Assignment - Introduction to Deep Learning","content":"\n# Assignment - Introduction to Deep Learning\n\nComplete all section of the [Learn Intro to Deep Learning](https://www.kaggle.com/learn/intro-to-deep-learning) course on Kaggle (est. 3-4 hours). Submit your completed file for the final exercise (Binary Classification) to the assignment in canvas.\n\n# Lessons\n- [[AI - W4 Introduction]]\n- [[AI - W4 Neural Network and Deep Learning Overview]]\n- [[AI - W4 How Neural Networks Learn]]\n- [[AI - W4 TensorFlow Playground]]\n- AI - W4 Assignment - Introduction to Deep Learning","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W4-How-Neural-Networks-Learn":{"title":"AI - W4 How Neural Networks Learn","content":"\n# How Neural Networks Learn\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=825eec4d-a1c9-4fca-8a44-b15801887843\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"How Neural Networks Learn\" \u003e\u003c/iframe\u003e\n\n### Optional Resources\n- [Gradient descent, how neural networks learn | Chapter 2, Deep learning (youtube.com)](https://www.youtube.com/watch?v=IHZwWFHWa-w\u0026ab_channel=3Blue1Brown)\n- [What is backpropagation really doing? | Chapter 3, Deep learning (youtube.com)](https://www.youtube.com/watch?v=Ilg3gGewQ5U\u0026ab_channel=3Blue1Brown)\n\n# Lessons\n- [[AI - W4 Introduction]]\n- [[AI - W4 Neural Network and Deep Learning Overview]]\n- AI - W4 How Neural Networks Learn\n- Next: [[AI - W4 TensorFlow Playground]]\n- [[AI - W4 Assignment - Introduction to Deep Learning]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W4-Introduction":{"title":"AI - W4 Introduction","content":"\n# Week 4 Learning Objectives\n*These topics are what will be covered in this week's knowledge check and entry ticket quiz.*\n- Understand the basic structure and components of a feedforward neural network, including input layer, hidden layers, and output layer.\n- Explain the purpose of training a neural network and the role of weights in determining the network's predictions.\n- Understand the loss function and its role during training.\n- Understand gradient descent and its role during training.\n- Understand the concept of learning rate and its impact on the training process.\n- Define an epoch in the context of neural network training.\n- Understand the concept of batch size and its impact on training.\n- Explain the purpose of early stopping and how it helps prevent overfitting.\n\n# Lessons\n- AI - W4 Introduction\n- Next: [[AI - W4 Neural Network and Deep Learning Overview]]\n- [[AI - W4 How Neural Networks Learn]]\n- [[AI - W4 TensorFlow Playground]]\n- [[AI - W4 Assignment - Introduction to Deep Learning]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W4-Neural-Network-and-Deep-Learning-Overview":{"title":"AI - W4 Neural Network and Deep Learning Overview","content":"\n# Neural Network and Deep Learning Overview\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=5bbe984f-fc63-405d-a1bf-b158004553f4\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Neural Networks and Deep Learning Overview\" \u003e\u003c/iframe\u003e\n\n### Optional Resources\n- [Neural networks: representation. (jeremyjordan.me)](https://www.jeremyjordan.me/intro-to-neural-networks/)\n- [But what is a neural network? | Chapter 1, Deep learning (youtube.com)](https://www.youtube.com/watch?v=aircAruvnKk\u0026ab_channel=3Blue1Brown)\n\n# Lessons\n- [[AI - W4 Introduction]]\n- AI - W4 Neural Network and Deep Learning Overview\n- Next: [[AI - W4 How Neural Networks Learn]]\n- [[AI - W4 TensorFlow Playground]]\n- [[AI - W4 Assignment - Introduction to Deep Learning]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W4-TensorFlow-Playground":{"title":"AI - W4 TensorFlow Playground","content":"\n# TensorFlow Playground\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=d24a7a78-5fc0-4c6b-8e0b-b159001a87bc\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Tensor Playground\" \u003e\u003c/iframe\u003e\n\n### Link -\u003e [TensorFlow Playground](https://playground.tensorflow.org/#activation=tanh\u0026batchSize=10\u0026dataset=circle\u0026regDataset=reg-plane\u0026learningRate=0.03\u0026regularizationRate=0\u0026noise=0\u0026networkShape=4\u0026seed=0.91979\u0026showTestData=false\u0026discretize=false\u0026percTrainData=50\u0026x=true\u0026y=true\u0026xTimesY=false\u0026xSquared=false\u0026ySquared=false\u0026cosX=false\u0026sinX=false\u0026cosY=false\u0026sinY=false\u0026collectStats=false\u0026problem=classification\u0026initZero=false\u0026hideText=false\u0026discretize_hide=false\u0026showTestData_hide=false\u0026stepButton_hide=false\u0026activation_hide=true\u0026noise_hide=false\u0026regularization_hide=true\u0026regularizationRate_hide=true)\n\n# Lessons\n- [[AI - W4 Introduction]]\n- [[AI - W4 Neural Network and Deep Learning Overview]]\n- [[AI - W4 How Neural Networks Learn]]\n- AI - W4 TensorFlow Playground\n- Next: [[AI - W4 Assignment - Introduction to Deep Learning]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W5-Assignment":{"title":"AI - W5 Assignment","content":"# Assignment - Computer Vision\n\nComplete all section of the [Learn Computer Vision](https://www.kaggle.com/learn/computer-vision)  course on Kaggle (est. 3-4 hours). Submit your completed file for the final exercise (Data Augmentation) to the assignment in canvas.\n\n\n\n# Lessons\n- [[AI - W5 Introduction]]\n- [[AI - W5 Types of Neural Network]]\n- AI - W5 Assignment","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W5-Introduction":{"title":"AI - W5 Introduction","content":"\n# Week 5 Learning Objectives\n*These topics are what will be covered in this week's knowledge check and entry ticket quiz.*\n- Understand the different types of common neural network and what they are often used for. Explain how each of the following function at a high level:\n\t- Feed Forward Neural Networks (FFNNs)\n\t- Convolutional Neural Networks (CNNs) \n\t- Recurrent Neural Networks (RNNs)\n\t- Transformers\n# Lessons\n- AI - W5 Introduction\n- Next: [[AI - W5 Types of Neural Network]]\n- [[AI - W5 Assignment]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W5-Types-of-Neural-Network":{"title":"AI - W5 Types of Neural Network","content":"\n# Types of Neural Network\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=ad88f2e7-7302-46af-812a-b16101145f97\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Types of Neural Networks\" \u003e\u003c/iframe\u003e\n\n### Optional Resources\n- [2D Visualization of a Convolutional Neural Network (adamharley.com)](https://adamharley.com/nn_vis/cnn/2d.html)\n\n# Lessons\n- [[AI - W5 Introduction]]\n- AI - W5 Types of Neural Networks\n- Next: [[AI - W5 Assignment]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W6-Applications-and-Challenges-of-RL":{"title":"AI - W6 Applications and Challenges of RL","content":"\n# Applications and Challenges of RL\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=29611f1a-f365-41ff-b700-b16801697f2a\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"RL 3\" \u003e\u003c/iframe\u003e\n\n# Lessons\n- [[AI - W6 Introduction]]\n- [[AI - W6 Basics of RL]]\n- [[AI - W6 Types of RL]]\n- AI - W6 Applications and Challenges of RL\n- Next: [[AI - W6 Assignment]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W6-Assignment":{"title":"AI - W6 Assignment","content":"\n# W6 Assignment\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=f5441171-a6fe-4645-b322-b16801786de8\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"RL CartPole Assignment\" \u003e\u003c/iframe\u003e\n\nVisual Studio Code: [Visual Studio Code - Code Editing. Redefined](https://code.visualstudio.com/)\nPython: [Python Release Python 3.11.9 | Python.org](https://www.python.org/downloads/release/python-3119/)\n- Check \"Add Python to PATH\" when installing\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/AI-Files/Images/AddPythonToPath.png\"\u003e\nCartPole Documentation: [Cart Pole - Gymnasium Documentation (farama.org)](https://gymnasium.farama.org/environments/classic_control/cart_pole/)\n\n# Assignment\n\n1. Download and install VS Code and Python (links above)\n2. Download the \u003ca href=\"https://github.com/kellerflint/Course-Resources/blob/hugo/content/AI-Files/CartPoleAssignment.ipynb\"\u003eCartPoleAssignment.ipynb (github.com)\u003c/a\u003e and open it in VS Code\n3. Install the Jupyter extension (see video)\n4. Read the text and understand each code cell as you run them\n5. Fill in and successfully execute and code cells that require your input\n6. Upload your completed CartPoleAssignment.ipynb file to the assignment submission on Canvas.\n\n### Optional Resources\n- If you're interested in learning more about how to implement RL -\u003e [Reinforcement Learning in 3 Hours | Full Course using Python (youtube.com)](https://www.youtube.com/watch?v=Mut_u40Sqz4\u0026t=2674s\u0026ab_channel=NicholasRenotte)\n# Lessons\n- [[AI - W6 Introduction]]\n- [[AI - W6 Basics of RL]]\n- [[AI - W6 Types of RL]]\n- [[AI - W6 Applications and Challenges of RL]]\n- AI - W6 Assignment","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W6-Basics-of-RL":{"title":"AI - W6 Basics of RL","content":"# Basics of RL\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=262995a6-f3ab-4b74-8eb4-b16801697f52\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"RL 1\" \u003e\u003c/iframe\u003e\n\n# Lessons\n- [[AI - W6 Introduction]]\n- AI - W6 Basics of RL\n- Next: [[AI - W6 Types of RL]]\n- [[AI - W6 Applications and Challenges of RL]]\n- [[AI - W6 Assignment]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W6-Introduction":{"title":"AI - W6 Introduction","content":"\n# Week 6 Learning Objectives\n*These topics are what will be covered in this week's knowledge check and entry ticket quiz.*\n- Define key concepts in reinforcement learning, including agents, environments, states, actions, and rewards.\n- Understand the exploration vs. exploitation trade-off and its importance in reinforcement learning algorithms.\n- Identify real-world applications of reinforcement learning.\n- Discuss the challenges and limitations of reinforcement learning.\n\n# Lessons\n- AI - W6 Introduction\n- Next: [[AI - W6 Basics of RL]]\n- [[AI - W6 Types of RL]]\n- [[AI - W6 Applications and Challenges of RL]]\n- [[AI - W6 Assignment]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W6-Types-of-RL":{"title":"AI - W6 Types of RL","content":"# Types of RL\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=ab60a945-b99a-4aa4-912e-b16801697fba\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"RL 2\" \u003e\u003c/iframe\u003e\n\n### Supplemental Resources\n- Simple overview of RL terminology and concepts: [Reinforcement Learning: Crash Course AI #9 - YouTube](https://www.youtube.com/watch?v=nIgIv4IfJ6s\u0026ab_channel=CrashCourse)\n# Lessons\n- [[AI - W6 Introduction]]\n- [[AI - W6 Basics of RL]]\n- AI - W6 Types of RL\n- Next: [[AI - W6 Applications and Challenges of RL]]\n- [[AI - W6 Assignment]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W7-Assignment":{"title":"AI - W7 Assignment","content":"\n# W7 Assignment\n\n**Instructions**:\n1. Choose a topic or skill you'd like to learn about that you're not very familiar with. It should be conceptual, not just factual. A few examples might be k-means clustering or another unsupervised learning technique we did not cover in class, a deeper dive into neural network architectures like CNNs, RNNs or Transformers, or any other concepts that may be somewhat challenging and outside of your expertise.\n2. Find an online resource, such as an article or tutorial, that provides a base for learning the topic.\n3. Use an AI language model (recommended: Claude Sonnet for strong reasoning, Gemini for access to internet and more up-to-date knowledge, or another if you have access) to assist in your learning process. When you encounter difficulties, ask the AI to:\n    - Simplify the topic\n    - Explain a concept\n    - Provide an example\n4. Test your understanding by rephrasing the content in your own words and asking the AI to verify the correctness of your understanding.\n5. Confirm your learning by re-reading the original source or finding a new source through a Google search. Ensure that what you learned aligns with your understanding from the AI interactions. \n6. I will often repeat this cycle several times to get deeper engagement with the topic, but only one iteration is required for this assignment.\n\n**Submission Requirements**:\n1. At the top of your submission, provide links to the sources you used during the learning process.\n2. Include at least two back-and-forth interaction with the AI that you found useful or not useful. Copy the prompt you provided and the AI's response for these interactions.\n3. Briefly explain what about the selected interactions were useful or not useful for your learning.\n4. Summarize your overall experience using the AI, addressing the following questions:\n    - How did the learning process go for you?\n    - Did you discover any tricks for effectively using the AI?\n    - Would you use AI for learning in the future?\n5. Export as a PDF and submit to the assignment on Canvas.\n# Lessons\n- [[AI - W7 Introduction]]\n- [[AI - W7 Basics of Working with Generative AI and LLMs]]\n- [[AI - W7 Prompt Engineering]]\n- [[AI - W7 Learning with Generative AI]]\n- AI - W7 Assignment","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W7-Basics-of-Working-with-Generative-AI-and-LLMs":{"title":"AI - W7 Basics of Working with Generative AI and LLMs","content":"\n# Basics of Working with Generative AI and LLMs\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=901c005e-dd4f-4cac-9bbb-b16f016956f5\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Basics of Working with Gen AI and LLMs\" \u003e\u003c/iframe\u003e\n\n### Chat Web UIs\n- https://chatgpt.com/\n- https://gemini.google.com/\n- https://claude.ai/chat/\n\n### Platforms / APIs\n- https://platform.openai.com/\n- https://console.groq.com/\n\n### LLM Comparison Tool\n- [GPT-3.5 Turbo - Quality, Performance \u0026 Price Analysis | Artificial Analysis](https://artificialanalysis.ai/models/gpt-35-turbo)\n\n# Lessons\n- [[AI - W7 Introduction]]\n- AI - W7 Basics of Working with Generative AI and LLMs\n- Next: [[AI - W7 Prompt Engineering]]\n- [[AI - W7 Learning with Generative AI]]\n- [[AI - W7 Assignment]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W7-Discussion-Post":{"title":"AI - W7 Discussion Post","content":"# Lessons\n- [[AI - W7 Introduction]]\n- [[AI - W7 Basics of Working with Generative AI and LLMs]]\n- [[AI - W7 Prompt Engineering]]\n- Next: [[AI - W7 Learning with Generative AI]]\n- [[AI - W7 Assignment]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W7-Introduction":{"title":"AI - W7 Introduction","content":"\n# Week 7 Learning Objectives\n*These topics are what will be covered in this week's knowledge check and entry ticket quiz.*\n- Understand the concept of generative AI and how it relies on deep learning.\n- Describe the role of Large Language Models (LLMs) as a category of generative AI.\n- Understand the basic process of how LLMs produce text using the attention mechanism.\n- Identify common strengths and weaknesses of LLMs.\n- Explore popular web interfaces for interacting with LLMs, such as ChatGPT, Gemini, and Claude.\n- Compare the performance of different LLMs based on factors such as quality, speed, and price.\n- Understand the concept of prompt engineering and its role in improving LLM performance for specific use cases.\n- Understand and apply the three fundamental elements of successful prompt engineering: clarity, context, and scope.\n\n**NOTE: Only my first two videos will be covered on the Entry Ticket for W7!** The \"ChatGPT Prompt Engineering for Developers\" videos and my \"Learning with Generative AI\" video will not appear on the entry ticket or be required for the week 7 discussion post.\n\n# Lessons\n- AI - W7 Introduction\n- Next: [[AI - W7 Basics of Working with Generative AI and LLMs]]\n- [[AI - W7 Prompt Engineering]]\n- [[AI - W7 Learning with Generative AI]]\n- [[AI - W7 Assignment]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W7-Learning-with-Generative-AI":{"title":"AI - W7 Learning with Generative AI","content":"# Learning with Generative AI\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=19f3d17e-5d81-4c2b-8b5f-b16f016956ca\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Learning with Generative AI\" \u003e\u003c/iframe\u003e\n\n**NOTE: Content from this video will not appear on the week 7 entry ticket or be required in order to complete the week 7 discussion post!**\n\n# Lessons\n- [[AI - W7 Introduction]]\n- [[AI - W7 Basics of Working with Generative AI and LLMs]]\n- [[AI - W7 Prompt Engineering]]\n- AI - W7 Learning with Generative AI\n- Next: [[AI - W7 Assignment]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W7-Prompt-Engineering":{"title":"AI - W7 Prompt Engineering","content":"# Prompt Engineering\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=9e54cd29-79e5-4d13-baf2-b16f01695690\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Prompt Engineering\" \u003e\u003c/iframe\u003e\n\n### Watch all sections of [ChatGPT Prompt Engineering for Developers - deeplearning.ai](https://learn.deeplearning.ai/courses/chatgpt-prompt-eng/lesson/1/introduction) (about 1.5 hours)\n\n**NOTE: Content from the \"ChatGPT Prompt Engineering for Developers\" videos will not appear on the week 7 entry ticket or be required in order to complete the week 7 discussion post!**\n\n# Lessons\n- [[AI - W7 Introduction]]\n- [[AI - W7 Basics of Working with Generative AI and LLMs]]\n- AI - W7 Prompt Engineering\n- Next: [[AI - W7 Learning with Generative AI]]\n- [[AI - W7 Assignment]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W8-Assignment":{"title":"AI - W8 Assignment","content":"# W8 / W9 Assignment - Final Project Proposals\n\n### Review the Final Project Assignment\n\n[[AI - Final Project Assignment]]\n\n### Create Your Final Project Proposal\n\nTo ensure that your final project is on the right track and aligns with the course requirements, you will submit a project proposal. This proposal will outline your chosen project topic, the approach you plan to take, and the expected deliverables. To assist you in creating a comprehensive proposal, you will collaborate with an AI model (GPT-4o or Claude Sonnet) to refine and validate your plan.\n\nKeep the scope of work fairly small and focused. There are only a few weeks left of class so start with an MVP and if you have time, you can expand on it from there.\n\nProposal Requirements:\n1. Project Topic:\n    - Clearly state the topic or problem you plan to address in your final project.\n2. Project Category:\n    - Specify which project category your proposal falls under (Statistical Model, Reinforcement Learning Task, AI-Powered Application, or Open-Ended Project).\n    - If you choose an open-ended project, provide a detailed description of your project idea and how it aligns with the course objectives.\n3. Approach and Methodology:\n    - Describe the approach you plan to take to tackle your chosen project at a high level.\n    - Outline the key steps involved in your project.\n    - Mention a few specific techniques, algorithms, or tools you might use.\n    - If applicable, mention any datasets or resources you will utilize.\n\nAI Collaboration: To ensure that your proposal meets the assignment requirements and covers all necessary aspects, you will work with an AI model (I'd recommend GPT-4o or Claude Sonnet) to refine and validate your plan.\n\nShare your proposal with the AI model and iterate based on its feedback until you have a comprehensive and well-structured plan.\n\nI'd suggest using this prompt before submitting.\n\n```\nPlease review my project proposal and provide feedback. Check how well my proposal aligns with the following requirements. Check for clarity, concision and completeness in my writing. Give specific areas for improvement, if any.\n\nProposal Requirements:\n*Keep the scope of work fairly small and focused. There are only a few weeks left of class so start with an MVP and if you have time, you can expand on it from there.*\n1. Project Topic:\n    - Clearly state the topic or problem you plan to address in your final project.\n2. Project Category:\n    - Specify which project category your proposal falls under (Statistical Model, Reinforcement Learning Task, AI-Powered Application, or Open-Ended Project).\n    - If you choose an open-ended project, provide a detailed description of your project idea and how it aligns with the course objectives.\n3. Approach and Methodology:\n    - Describe the approach you plan to take to tackle your chosen project at a high level.\n    - Outline the key steps involved in your project.\n    - Mention a few specific techniques, algorithms, or tools you might use.\n    - If applicable, mention any datasets or resources you will utilize.\n\nMy Proposal:\n{YourProposalHere}\n```\n\n*You do not have to take every suggestion the AI makes. Remember, you have more context about the task than the AI does and you are ultimately responsible for the work you submit.*\n\nSubmission: Submit your final project proposal as a PDF document to the assignment in Canvas. The proposal should be well-organized, clearly written, and free of grammatical or spelling errors.\n\nI will review your proposal and provide feedback to ensure you are on the right track. If necessary, I may request further clarification or suggest modifications to your plan.\n\nIf you have any questions or need assistance, feel free to reach out!\n\n# Lessons\n- [[AI - W8 Introduction]]\n- [[AI - W8 Calling LLM APIs]]\n- [[AI - W8 LangChain Prompts]]\n- [[AI - W8 LangChain LLM Chains]]\n- [[AI - W8 LangChain Agents and Tools]]\n- [[AI - W8 LangChain for LLM Application Development Lessons]]\n- AI - W8 Assignment","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W8-Calling-LLM-APIs":{"title":"AI - W8 Calling LLM APIs","content":"# Calling LLM APIs\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=b8c87e62-d84a-46c0-ba38-b17700f99390\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"AI Power Apps - Calling APIs\" \u003e\u003c/iframe\u003e\n\n\n# Lessons\n- [[AI - W8 Introduction]]\n- AI - W8 Calling LLM APIs\n- Next: [[AI - W8 LangChain Prompts]]\n- [[AI - W8 LangChain LLM Chains]]\n- [[AI - W8 LangChain Agents and Tools]]\n- [[AI - W8 LangChain for LLM Application Development Lessons]]\n- [[AI - W8 Assignment]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W8-Introduction":{"title":"AI - W8 Introduction","content":"\n# Learning Objectives\n*These topics are what will be covered in knowledge checks and entry ticket quizzes.*\n- Understand how to use language models (LLMs) in applications by calling an API endpoint.\n- Learn how to work with the LangChain library to simplify LLM application development.\n- Explore the concept of chains in LangChain to create multi-step, autonomous processes that leverage LLMs to complete tasks.\n- Explore the concept of agents and tools in LangChain and understand how they can help LLMs provide better responses.\n\n# Lessons\n- AI - W8 Introduction\n- Next: [[AI - W8 Calling LLM APIs]]\n- [[AI - W8 LangChain Prompts]]\n- [[AI - W8 LangChain LLM Chains]]\n- [[AI - W8 LangChain Agents and Tools]]\n- [[AI - W8 LangChain for LLM Application Development Lessons]]\n- [[AI - W8 Assignment]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W8-LangChain-Agents-and-Tools":{"title":"AI - W8 LangChain Agents and Tools","content":"# LangChain Agents and Tools\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=15eec3a6-52e5-4ad0-b0bf-b17700f965d5\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"AI Powered Apps - Agents and Tools\" \u003e\u003c/iframe\u003e\n\n# Lessons\n- [[AI - W8 Introduction]]\n- [[AI - W8 Calling LLM APIs]]\n- [[AI - W8 LangChain Prompts]]\n- [[AI - W8 LangChain LLM Chains]]\n- AI - W8 LangChain Agents and Tools\n- Next: [[AI - W8 LangChain for LLM Application Development Lessons]]\n- [[AI - W8 Assignment]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W8-LangChain-LLM-Chains":{"title":"AI - W8 LangChain LLM Chains","content":"# LangChain LLM Chains\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=66a3fcbc-0462-40f0-b791-b17700f97faf\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"AI Powered Apps - Chains\" \u003e\u003c/iframe\u003e\n\n# Lessons\n- [[AI - W8 Introduction]]\n- [[AI - W8 Calling LLM APIs]]\n- [[AI - W8 LangChain Prompts]]\n- AI - W8 LangChain LLM Chains\n- Next: [[AI - W8 LangChain Agents and Tools]]\n- [[AI - W8 LangChain for LLM Application Development Lessons]]\n- [[AI - W8 Assignment]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W8-LangChain-Prompts":{"title":"AI - W8 LangChain Prompts","content":"# LangChain Prompts\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=0c5e2915-e021-4771-bae5-b17700f98c39\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"AI Powered Apps - LangChain Prompts\" \u003e\u003c/iframe\u003e\n\n# Lessons\n- [[AI - W8 Introduction]]\n- [[AI - W8 Calling LLM APIs]]\n- AI - W8 LangChain Prompts\n- Next: [[AI - W8 LangChain LLM Chains]]\n- [[AI - W8 LangChain Agents and Tools]]\n- [[AI - W8 LangChain for LLM Application Development Lessons]]\n- [[AI - W8 Assignment]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-W8-LangChain-for-LLM-Application-Development-Lessons":{"title":"AI - W8 LangChain for LLM Application Development Lessons","content":"# LangChain Lessons\n\nWatch and follow along (either locally or on Google Colab) with the following sections of DeepLearning.AI's mini-course on [LangChain for LLM Application Development (deeplearning.ai)](https://learn.deeplearning.ai/courses/langchain/lesson/1/introduction)\n- Introduction\n- Models, prompts and parsers\n- Memory\n- Chains\n- *You can skip \"Question and Answer\" and \"Evaluation\" for now*\n- Agents\n# Lessons\n- [[AI - W8 Introduction]]\n- [[AI - W8 Calling LLM APIs]]\n- [[AI - W8 LangChain Prompts]]\n- [[AI - W8 LangChain LLM Chains]]\n- [[AI - W8 LangChain Agents and Tools]]\n- AI - W8 LangChain for LLM Application Development Lessons\n- Next: [[AI - W8 Assignment]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/AI-_-Lesson-Index":{"title":"AI _ Lesson Index","content":"# Module One: Introduction to AI and Machine Learning\n\n- [[AI - W1 Introduction]]\n- [[AI - W2 Introduction]]\n- [[AI - W3 Introduction]]\n- [[AI - W4 Introduction]]\n- [[AI - W5 Introduction]]\n- [[AI - W6 Introduction]]\n- [[AI - W7 Introduction]]\n- [[AI - W8 Introduction]]\n- [[AI - Final Project Assignment]]","lastmodified":"2024-06-02T23:20:19.201799821Z","tags":[]},"/MISC-Node-Demo":{"title":"MISC - Node Demo","content":"[pizza-node-demo/views at starter · kellerflint/pizza-node-demo (github.com)](https://github.com/kellerflint/pizza-node-demo/tree/starter/views)\n\n```js\n// Parse URL-encoded bodies (as sent by HTML forms)  \napp.use(express.urlencoded({ extended: true }));\n```\n\n```js\n// Passing order details to the view\nres.render('confirmation', { order: orderDetails });\n```\n","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/MISC-Node-Lessons":{"title":"MISC - Node Lessons","content":"\n# Node Lessons\n\n\n\n### Installing Node\n\nDownloads:\n- [Node.js (nodejs.org)](https://nodejs.org/en)\n- [Visual Studio Code - Code Editing. Redefined](https://code.visualstudio.com/)\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=500a44f9-4637-4817-a79f-b12901293a5b\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n### Project Setup and Hello World App\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=41131105-dffe-4c67-8c22-b12901293a32\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n##### Terminal Commands from Video\n\nCreate the project:\n```bash\nnpm init -y\n```\n\nInstall express and ejs:\n```bash\nnpm install express ejs\n```\n\nInstall nodemon:\n```bash\nnpm install --save-dev nodemon\n```\n\nStart node\n```bash\nnpx nodemon index.js\n```\n","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/Old-or-Temp-Pages/NET-Example":{"title":"NET Example","content":"Model\n```cs\npublic class Book\n{\n    public int Id { get; set; }\n    public string Title { get; set; }\n    public string Author { get; set; }\n    public int Year { get; set; }\n}\n```\n\nService\n```cs\npublic interface IBookRepository\n{\n    Book GetById(int id);\n    void Add(Book book);\n    void Update(Book book);\n    void SaveChanges();\n}\n```\n\n```cs\npublic interface IBookService\n{\n    Task\u003cBook\u003e GetBookByIdAsync(int id);\n    Task\u003cBook\u003e AddBookAsync(Book book);\n    Task\u003cBook\u003e UpdateBookAsync(int id, Book book);\n}\n```\n\n```cs\npublic class BookService : IBookService\n{\n    private readonly IBookRepository _bookRepository;\n\n    public BookService(IBookRepository bookRepository)\n    {\n        _bookRepository = bookRepository;\n    }\n\n    public Book GetBookById(int id)\n    {\n        return _bookRepository.GetById(id);\n    }\n\n    public Book AddBook(Book book)\n    {\n        _bookRepository.Add(book);\n        _bookRepository.SaveChanges();\n        return book;\n    }\n\n    public Book UpdateBook(int id, Book updatedBook)\n    {\n        var book = _bookRepository.GetById(id);\n        if (book != null)\n        {\n            book.Title = updatedBook.Title;\n            book.Author = updatedBook.Author;\n            book.Year = updatedBook.Year;\n            _bookRepository.Update(book);\n            _bookRepository.SaveChanges();\n        }\n        return book;\n    }\n}\n```\n\n\nController\n```cs\nusing Microsoft.AspNetCore.Mvc;\n\n[ApiController]\n[Route(\"[controller]\")]\npublic class BooksController : ControllerBase\n{\n    private readonly IBookService _bookService;\n\n    public BooksController(IBookService bookService)\n    {\n        _bookService = bookService;\n    }\n\n    [HttpGet(\"{id}\")]\n    public IActionResult Get(int id)\n    {\n        var book = _bookService.GetBookById(id);\n        if (book == null) return NotFound();\n        return Ok(book);\n    }\n\n    [HttpPost]\n    public IActionResult Post([FromBody] Book book)\n    {\n        var newBook = _bookService.AddBook(book);\n        return CreatedAtAction(nameof(Get), new { id = newBook.Id }, newBook);\n    }\n\n    [HttpPut(\"{id}\")]\n    public IActionResult Put(int id, [FromBody] Book book)\n    {\n        var updatedBook = _bookService.UpdateBook(id, book);\n        if (updatedBook == null) return NotFound();\n        return Ok(updatedBook);\n    }\n}\n```\n\nProgram.cs (application entry point)\n```cs\nusing Microsoft.AspNetCore.Builder;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Hosting;\n\nvar builder = WebApplication.CreateBuilder(args);\n\nbuilder.Services.AddControllers();\nbuilder.Services.AddScoped\u003cIBookService, BookService\u003e();\nbuilder.Services.AddScoped\u003cIBookRepository, BookRepository\u003e();\n\n\nvar app = builder.Build();\n\nif (app.Environment.IsDevelopment())\n{\n    app.UseDeveloperExceptionPage();\n}\n\napp.UseHttpsRedirection();\n\napp.UseAuthorization();\n\napp.MapControllers();\n\napp.Run();\n\n```","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-Final-Exam":{"title":"SQL - Final Exam","content":"# Final Exam Info\n\nThere is a **required in-person final exam** for this course on **Monday June 17th from 12:00-2:00pm** PST at the Auburn Center in room AC 310 (1221 D St NE, Auburn, WA 98002).\n\nIf you cannot attend the final exam at that time you **MUST** get in contact with me as soon as possible to make other arrangements. Please email me at kflint-blanchard@greenriver.edu.\n\n# Practice Final Exam -\u003e [[SQL - Practice Final]]\n# Topics\n\nThe following topics may appear on the final exam:\n*NOTE: Some of these may not have been covered yet if you're viewing this before week 10. All of these concepts will be covered before the final exam.*\n### Database Concepts:\n- Tables and their structure\n- Primary and foreign keys\n- Relationships between tables (one-to-many, many-to-many)\n- Data types\n\t- DATE\n\t- INT\n\t- TEXT\n\t- VARCHAR\n\t- DECIMAL\n\n### SQL Querying:\n- SELECT statements\n- WHERE clauses\n- LIKE operator\n- ORDER BY clause\n- JOINs\n- Aggregate functions (e.g., AVG, SUM, COUNT)\n- GROUP BY clause\n\n### Entity Relationship Diagrams (ERDs):\n- Understanding and creating ERDs given the SQL CREATE statements or a set of tables\n- Identifying entities, attributes, datatypes, and relationships\n- Crow's foot notation for representing relationships\n\n### Applying SQL Queries for Data Analytics:\n- Applying SQL concepts to solve real-world scenarios\n- Calculating aggregated metrics (e.g., total sales, average price, etc.)\n- Combining data from multiple tables using JOINs\n- Presenting data in a meaningful and understandable format\n- Drawing insights and conclusions from the data\n\n# Cheat Sheet\n\nI **DO NOT** allow you to bring your own notes for the final exam. I will provide the following cheat sheet on the exam day that will show the basic syntax of all the commands you will need.\n\n### SELECTs, Operators and Clauses\n```sql\n-- SELECT Syntax\nSELECT Column1, Column2, ... FROM TableName\n\n-- Table JOIN Syntax\nJOIN TableName2 ON TableName1.PrimaryKeyColumn = TableName2.ForeignKeyColumn\n\n-- WHERE Syntax\nWHERE condition\n\n-- WHERE Operator List\nWHERE condition AND condition\nWHERE condition OR condition\nWHERE ColumnName BETWEEN x AND y\nWHERE NOT condition\nWHERE ColumnName IN (x, y, z)\nWHERE ColumnName LIKE \"Pattern\"\n-- The LIKE operator is used in the WHERE clause to search for a specified pattern in a column. It is often used with wildcard characters such as:\n-- The percentage sign (%) represents zero, one, or multiple characters.\n-- The underscore sign (_) represents a single character.\n```\n\n```sql\n-- ORDER BY\n-- 1 Column, Descending\nORDER BY ColumnName DESC\n-- Multiple Columns, Ascending\nORDER BY Column1, Column2,... ASC\n```\n\n### GROUP BY and Aggregation\n```sql\n-- GROUP BY Command\nSELECT Column1, AggregateFunction(Column2), ... FROM TableName \nGROUP BY Column1;\n\n-- Aggregate Functions\nCOUNT(*)\nMAX(ColumnName)\nMIN(ColumnName)\nSUM(ColumnName)\nAVG(ColumnName)\n```\n\n\n### CREATE and INSERT Statements\n```sql\n-- CREATE Table\nCREATE TABLE TableName(\n\t-- Add Column\n\tColumn1 datatype,\n\t-- Can be NULL\n\tColumn2 datatype NULL,\n\t-- Cannot be NULL\n\tColumn3 datatype NOT NULL,\n\t\n\t-- Establish Primary Key Constraint\n\tPrimary Key (Column1),\n\t-- Establish Foreign Key Constraint\n\tFOREIGN KEY (ForeignKeyColumn) REFERENCES OtherTable(PrimaryKeyColumn)\n);\n\nINSERT INTO TableName VALUES (\"Column1Value\", \"Column2Value\", ...);\n\n-- Data Types\nDATE -- Stores the date in the format \"YYYY-MM-DD\"\nINT\nTEXT -- Stores long form text\nVARCHAR(MaxCharacters)\nDECIMAL(Digits, NumberOfDigitsAfterDecimalPoint)\n```\n","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-Practice-Final":{"title":"SQL - Practice Final","content":"","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-Supplemental-Materials-Example-Opportunity":{"title":"SQL - Supplemental Materials - Example Opportunity","content":"\nClient: Walgreens, United States, 200 Wilmot Road Deerfield\n\nOpportunity Name: Appointment Tracking App for Walgreens\n\nEstimated Revenue: 5 million\n\nCreated On: 22-10-19\n\nWorking Notes: “Walgreens needs new software to help customers sign up for and manage appointments at their pharmacy. I spoke to Mrs. Blight last week to confirm the project was viable. Our margins for the cost estimation are good and we’ve created the statement of work. We need to get the statement reviewed by management before sending it over to the client.”\n\nClient Contacts:\n-\u003e Jessica Whitwell, (111) 222-3333, jessica@wallgreens.com\n-\u003e Amity Blight, (222) 333-4444, amity@wallgreens.com\n\nLead Sales Person: Annabeth Chase\n\nSteps for this opportunity:\nConfirm Opportunity: completed on 10/21/2022, assigned to Annabeth Chase\nCreate Cost Estimation: completed on 10/23/2022, assigned to David Martinez\nCreate Statement of Work: completed on 10/24/2022 assigned to Annabeth Chase\nReview Statement of Work: no completion date yet, assigned to Si Wang-mu","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-Supplemental-Materials-Opportunity-Steps":{"title":"SQL - Supplemental Materials - Opportunity Steps","content":"\n**Steps in an opportunity:**\nStep 1 - Confirm Opportunity: Follow up with the client to confirm the opportunity\nStep 2 - Create Cost Estimation: Estimate the cost of completing the project and identify profit margins\nStep 3 - Create Statement of Work: Create Statement of Work document that outlines everything that will need to go into the project\nStep 4 - Review Statement of Work: Review statement of work with management\nStep 5 - Get Signatures: Get sign off from client","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-Supplemental-Materials-Sales-Team-Members":{"title":"SQL - Supplemental Materials - Sales Team Members","content":"\n**Current sales team members:**\nName: Annabeth Chase, Role: Sales Representative\nName: David Martinez, Role: Sales Representative\nName: Si Wang-mu, Role: Manager\nName: Duncan Idaho, Role: Sales Representative\n","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W10-Advanced-Querying-Aggregate-Functions":{"title":"SQL - W10 Advanced Querying - Aggregate Functions","content":"# Advanced Querying - Aggregate Functions\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=24a1eee0-12dd-4809-bc0e-b12c00689ad8\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Practice Questions\n\n*Use the magic store database for the following queries.*\n\n1. Write a query to find the total number of orders placed in 2021. \n\nExpected result:\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/AQR4.png\"\u003e\n\n2. Write a query to calculate the minimum, average and maximum price of all products supplied by \"Elixir Essentials\". \n\nExpected result: \n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/AQR5.png\"\u003e\n\n# Lessons\n- [[SQL - W10 Advanced Querying - Introduction]]\n- SQL - W10 Advanced Querying - Aggregate Functions\n- Next: [[SQL - W10 Advanced Querying - Column Aliasing]]\n- [[SQL - W10 Advanced Querying - Calculating Values]]\n- [[SQL - W10 Advanced Querying - Northwind Database]]\n- [[SQL - W10 Advanced Querying - GROUP BY]]\n- [[SQL - W10 Advanced Querying - Data Analytics with GROUP BY]]\n- [[SQL - W10 Advanced Querying and Data Analytics Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W10-Advanced-Querying-Calculating-Values":{"title":"SQL - W10 Advanced Querying - Calculating Values","content":"# Advanced Querying Topics Part 1 - Calculating Values\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=cf1f7215-ee7f-4f9a-a03c-b12c00689a49\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Practice Questions\n\n*Use the magic store database for the following queries.*\n\n4. Write a query to display the client's full name (first name and last name combined) as \"Client Name\" and the date their account was created as \"Sign up Date\" for clients with the IDs 5, 10, 15, 20 and 25. \n\nExpected results:\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/AQR6.png\"\u003e\n\n5. Write a query to display all products that cost over 1000 with their sales tax included. Your query should return columns for the \"Product Name\", \"Price\" and \"Price with Tax\". For the last columns you will need to multiply the product's price by 1.1 to include a 10% sales tax. \n\nExpected result:\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/AQR3.png\"\u003e\n\n# Lessons\n- [[SQL - W10 Advanced Querying - Introduction]]\n- [[SQL - W10 Advanced Querying - Aggregate Functions]]\n- [[SQL - W10 Advanced Querying - Column Aliasing]]\n- SQL - W10 Advanced Querying - Calculating Values\n- Next: [[SQL - W10 Advanced Querying - Northwind Database]]\n- [[SQL - W10 Advanced Querying - GROUP BY]]\n- [[SQL - W10 Advanced Querying - Data Analytics with GROUP BY]]\n- [[SQL - W10 Advanced Querying and Data Analytics Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W10-Advanced-Querying-Column-Aliasing":{"title":"SQL - W10 Advanced Querying - Column Aliasing","content":"# Advanced Querying - Column Aliasing\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=c709d480-ff4b-451f-8638-b12c00689afd\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Practice Questions\n\n*Use the magic store database for the following queries.*\n\n3. Write a query to show all products that cost more than 1 and less than 100. Display the product name, the product's supplier name and the product's price. Rename the price column as \"Price (USD)\", product name column as \"Product Name\" and the supplier name column as \"Supplier Name\". \n\nExpected results:\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/AQR7.png\"\u003e\n\n# Lessons\n- [[SQL - W10 Advanced Querying - Introduction]]\n- [[SQL - W10 Advanced Querying - Aggregate Functions]]\n- SQL - W10 Advanced Querying - Column Aliasing\n- Next: [[SQL - W10 Advanced Querying - Calculating Values]]\n- [[SQL - W10 Advanced Querying - Northwind Database]]\n- [[SQL - W10 Advanced Querying - GROUP BY]]\n- [[SQL - W10 Advanced Querying - Data Analytics with GROUP BY]]\n- [[SQL - W10 Advanced Querying and Data Analytics Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W10-Advanced-Querying-Data-Analytics-with-GROUP-BY":{"title":"SQL - W10 Advanced Querying - Data Analytics with GROUP BY","content":"# Grouping and Data Analytics - Data Analytics with GROUP BY\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=5373a6b0-580f-4e3c-bbe0-b1330053f56d\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Lessons\n- [[SQL - W10 Advanced Querying - Introduction]]\n- [[SQL - W10 Advanced Querying - Aggregate Functions]]\n- [[SQL - W10 Advanced Querying - Column Aliasing]]\n- [[SQL - W10 Advanced Querying - Calculating Values]]\n- [[SQL - W10 Advanced Querying - Northwind Database]]\n- [[SQL - W10 Advanced Querying - GROUP BY]]\n- SQL - W10 Advanced Querying - Data Analytics with GROUP BY\n- Next: [[SQL - W10 Advanced Querying and Data Analytics Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W10-Advanced-Querying-GROUP-BY":{"title":"SQL - W10 Advanced Querying - GROUP BY","content":"\n# Grouping and Data Analytics - GROUP BY\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=3caf9f08-858f-4406-8c75-b1330053f5c3\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Lessons\n- [[SQL - W10 Advanced Querying - Introduction]]\n- [[SQL - W10 Advanced Querying - Aggregate Functions]]\n- [[SQL - W10 Advanced Querying - Column Aliasing]]\n- [[SQL - W10 Advanced Querying - Calculating Values]]\n- [[SQL - W10 Advanced Querying - Northwind Database]]\n- SQL - W10 Advanced Querying - GROUP BY\n- Next: [[SQL - W10 Advanced Querying - Data Analytics with GROUP BY]]\n- [[SQL - W10 Advanced Querying and Data Analytics Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W10-Advanced-Querying-Introduction":{"title":"SQL - W10 Advanced Querying - Introduction","content":"# Advanced Querying - Introduction\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=8131671e-26a5-4ca1-ac7f-b1830178a06c\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Advanced Querying Introduction\" \u003e\u003c/iframe\u003e\n\n## Initialize the Magic Store Database\n\n- DROP the tables from your previous assignment(s), if necessary\n- Run the following script to populate your database -\u003e \u003ca href=\"https://github.com/kellerflint/Class-Intro-SQL/blob/hugo/content/SQL-Files/MagicStoreScript.sql\" target=\"_blank\"\u003eMagicStoreScript (github.com)\u003c/a\u003e\n- Magic Store Database Overview: [[SQL - W3 Magic Store Database Overview]]\n# Lessons\n- SQL - W10 Advanced Querying - Introduction\n- Next: [[SQL - W10 Advanced Querying - Aggregate Functions]]\n- [[SQL - W10 Advanced Querying - Column Aliasing]]\n- [[SQL - W10 Advanced Querying - Calculating Values]]\n- [[SQL - W10 Advanced Querying - Northwind Database]]\n- [[SQL - W10 Advanced Querying - GROUP BY]]\n- [[SQL - W10 Advanced Querying - Data Analytics with GROUP BY]]\n- [[SQL - W10 Advanced Querying and Data Analytics Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W10-Advanced-Querying-Northwind-Database":{"title":"SQL - W10 Advanced Querying - Northwind Database","content":"# Northwind Database\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=9fe46beb-4470-4e3f-bae4-b1330074ad4d\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n### Initialize the Northwind Database\n\n- DROP the tables from your previous assignment(s), if necessary\n- Run the following script to populate your database -\u003e \u003ca href=\"https://github.com/kellerflint/Class-Intro-SQL/blob/hugo/content/Files/NorthwindScript.sql\" target=\"_blank\"\u003eNorthwindScript (github.com)\u003c/a\u003e\n\n### Northwind Database Entity Relationship Diagram\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/NorthwindERD.png\"\u003e\n\n# Lessons\n- [[SQL - W10 Advanced Querying - Introduction]]\n- [[SQL - W10 Advanced Querying - Aggregate Functions]]\n- [[SQL - W10 Advanced Querying - Column Aliasing]]\n- [[SQL - W10 Advanced Querying - Calculating Values]]\n- SQL - W10 Advanced Querying - Northwind Database\n- Next: [[SQL - W10 Advanced Querying - GROUP BY]]\n- [[SQL - W10 Advanced Querying - Data Analytics with GROUP BY]]\n- [[SQL - W10 Advanced Querying and Data Analytics Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W10-Advanced-Querying-and-Data-Analytics-Assignment":{"title":"SQL - W10 Advanced Querying and Data Analytics Assignment","content":"\n# Advanced Querying and Data Analytics Assignment\n\n*Use the Northwind database for the following queries. Each query is worth 5 points.*\n\n6. Write a query to display the total quantity of products ordered by the client with the last name \"Martinez\". Display the client's full name as \"Client Name\" and the total quantity of products as \"Total Products Ordered\". \n\nExpected result:\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/AQR9.png\"\u003e\n\n7. Write a query to display the total amount of revenue that has been generated from the \"Snail\" product. To do this your query will need to:\n\t1. Find the total quantity of \"Snail\" products that have been ordered.\n\t2. Multiply the total quantity of snail's purchased by the price of a snail.\n\t3. Rename this column \"Snail Total Revenue\". \n\t\nExpected result:\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/AQR8.png\"\u003e\n\n8. Write a query to display the prices of the most and least expensive products ordered in January through March of 2021. Name the columns \"Cheapest\" and \"Most Expensive\". \n\nExpected result:\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/AQR10.png\"\u003e\n\n9. The procurement team wants to know the number of suppliers from each country. They need a report showing the country and the corresponding supplier count. \n\nExpected results:\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/GB1.png\"\u003e\n\n10. The inventory manager wants to know the number of products supplied by each supplier for products with a unit price greater than 30. \n\nExpected results:\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/GB2.png\"\u003e\n\n11. The procurement team wants to analyze the price range (highest / lowest) and average price of products supplied by each supplier. \n\nExpected results:\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/GB3.png\"\u003e\n\n12. The customer service team wants to identify the 5 most active customers based on the number of orders they have placed. Write a query to accomplish this. \n\nExpected results:\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/GB4.png\"\u003e\n\n### Submission Instructions\n\nPlease put all SQL queries for the practice questions into a single SQL file. Use comments to label each query with its respective question number. Submit this .sql file for your assignment on Canvas.\n\n# Lessons\n- [[SQL - W10 Advanced Querying - Introduction]]\n- [[SQL - W10 Advanced Querying - Aggregate Functions]]\n- [[SQL - W10 Advanced Querying - Column Aliasing]]\n- [[SQL - W10 Advanced Querying - Calculating Values]]\n- [[SQL - W10 Advanced Querying - Northwind Database]]\n- [[SQL - W10 Advanced Querying - GROUP BY]]\n- [[SQL - W10 Advanced Querying - Data Analytics with GROUP BY]]\n- SQL - W10 Advanced Querying and Data Analytics Assignment","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W2-Select-and-Filter-Data-Creating-a-Database":{"title":"SQL - W2 Select and Filter Data - Creating a Database","content":"# Select and Filter Data - Creating a Database\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=03277e59-0052-4bd5-afbe-b08f01438c9e\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Lessons\n- [[SQL - W2 Select and Filter Data - Introduction]]\n- SQL - W2 Select and Filter Data - Creating a Database\n- Next: [[SQL - W2 Select and Filter Data - Running Scripts]]\n- [[SQL - W2 Select and Filter Data - SELECT Statement]]\n- [[SQL - W2 Select and Filter Data - WHERE Clause and Comparison Operators]]\n- [[SQL - W2 Select and Filter Data - Logical Operators]]\n- [[SQL - W2 Select and Filter Data - ORDER BY]]\n- [[SQL - W2 Select and Filter Data - SQL Comments]]\n- [[SQL - W2 Select and Filter Data - Note on Semicolons]]\n- [[SQL - W2 Select and Filter Data - Practice Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W2-Select-and-Filter-Data-Introduction":{"title":"SQL - W2 Select and Filter Data - Introduction","content":"# Select and Filter Data - Introduction\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=099d37f5-9a86-4ea6-95b8-b0f20177b4ed\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nIn this section, we'll cover key SQL concepts to help you retrieve, filter and sort the information in your databases. We will cover using the SELECT statement to pick out the specific columns we're interested in. We'll learn to filter which rows we get using the WHERE clause and explore more some of the logic that can help us find exactly what we're looking for. Last, we'll understand how to sort our data using the ORDER BY clause.\n\nAs you progress through the lessons, make sure to solve the practice questions in your own database. Be sure to save all your queries to a file on your computer. You will need to submit them as part of your weekly assignment.\n\nBefore getting started you'll want to make sure that you have a text or code editor installed. You will need this to write SQL scripts. I'd recommend \u003ca href=\"https://code.visualstudio.com/\" target=\"_blank\"\u003eVisual Studio Code\u003c/a\u003e but you can use whatever software you'd like.\n\n# Lessons\n- SQL - W2 Select and Filter Data - Introduction\n- Next: [[SQL - W2 Select and Filter Data - Creating a Database]]\n- [[SQL - W2 Select and Filter Data - Running Scripts]]\n- [[SQL - W2 Select and Filter Data - SELECT Statement]]\n- [[SQL - W2 Select and Filter Data - WHERE Clause and Comparison Operators]]\n- [[SQL - W2 Select and Filter Data - Logical Operators]]\n- [[SQL - W2 Select and Filter Data - ORDER BY]]\n- [[SQL - W2 Select and Filter Data - SQL Comments]]\n- [[SQL - W2 Select and Filter Data - Note on Semicolons]]\n- [[SQL - W2 Select and Filter Data - Practice Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W2-Select-and-Filter-Data-Logical-Operators":{"title":"SQL - W2 Select and Filter Data - Logical Operators","content":"# Select and Filter Data - Logical Operators\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=1d1412b2-7cca-43cf-af61-b0f20177942c\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nLogical operators are essential in SQL for combining multiple conditions in the WHERE clause and adding flexibility to your queries. With the right operators, you can filter for rows based on any combination of attributes and conditions.\n\nSome of the most commonly used logical operators used in SQL are:\n- `AND`: Returns true if both conditions are true.\n- `OR`: Returns true if at least one of the conditions is true.\n- `NOT`: Negates the condition, returning true if the condition is false.\n- `BETWEEN`: Returns true if a value lies within a specified range.\n- `IN`: Returns true if a value matches any value in a list.\n- `LIKE`: Returns true if a value matches a specified pattern.\n\nExpanding on the `Employees` table from our previous examples:\n\n| EmployeeID | Name | Age | Department |\n| ---- | ---- | ---- | ---- |\n| 1 | John Doe | 28 | Marketing |\n| 2 | Jane Doe | 32 | HR |\n| 3 | Alex Ray | 45 | IT |\n| 4 | Sara Ali | 30 | Finance |\n| 5 | Mia Chen | 26 | Marketing |\n\nTo find employees over 30 years old in the IT department we could write:\n\n```sql\nSELECT * FROM Employees\nWHERE Age \u003e 30 AND Department = 'IT';\n```\n##### Expected Output:\n|EmployeeID|Name|Age|Department|\n|---|---|---|---|\n|3|Alex Ray|45|IT|\n\nAs 'Alex Ray' is the only employee who matches both criteria.\n\nAlternatively if we wanted to find employees who are either in the 'HR' departments OR over 30 years old we could write:\n\n```sql\nSELECT * FROM Employees\nWHERE Age \u003e 30 OR Department = 'IT';\n```\n##### Expected Output:\n|EmployeeID|Name|Age|Department|\n|---|---|---|---|\n|2|Jane Doe|32|HR|\n|3|Alex Ray|45|IT|\n\nBecause while 'Jane Doe' is not in the 'IT' department, she is older than 30 and only one condition needs to be met.\n\nTo find all employees who are between the ages of 20 and 30 we could write:\n\n```sql\nSELECT * FROM Employees\nWHERE Age BETWEEN 20 AND 30;\n```\n##### Expected Output: \n| EmployeeID | Name | Age | Department |\n| ---- | ---- | ---- | ---- |\n| 1 | John Doe | 28 | Marketing |\n| 4 | Sara Ali | 30 | Finance |\n| 5 | Mia Chen | 26 | Marketing |\n\nThis time the expected output includes Sara Ali because `BETWEEN` is inclusive meaning we'll also get employees who are equal to the thresholds.\n\nTo find employees who work in either 'Marketing', 'Finance', or 'IT' departments we could write:\n\n```sql\nSELECT * FROM Employees\nWHERE Department IN ('Marketing', 'Finance', 'IT');\n```\n##### Expected Output:\n|EmployeeID|Name|Age|Department|\n|---|---|---|---|\n|1|John Doe|28|Marketing|\n|3|Alex Ray|45|IT|\n|4|Sara Ali|30|Finance|\n|5|Mia Chen|26|Marketing|\n\nThe `LIKE` command is slightly more complicated. It can be used to find values that match a particular pattern a pattern. For example if we wanted to find employees whose names started the letter 'J' we could write:\n\n```sql\nSELECT * FROM Employees\nWHERE Name LIKE 'J%';\n```\n##### Expected Output:\n| EmployeeID | Name | Age | Department |\n| ---- | ---- | ---- | ---- |\n| 1 | John Doe | 28 | Marketing |\n| 2 | Jane Doe | 32 | HR |\n\nThe `%` symbol after the 'J' is a wildcard that represents zero, one, or multiple characters. So this pattern is looking for Names that start with a 'J' followed by any number of any characters (or none at all).\n\n`Like` can allow you to match any pattern with the right wildcards. See \u003ca href=\"https://www.w3schools.com/sql/sql_wildcards.asp\" target=\"_blank\"\u003eSQL Wildcard Characters (w3schools.com)\u003c/a\u003e for more information on Wildcards.\n\n# Practice Questions\n\n4. Write a query to select all customers who are from 'Berlin', 'London', 'Vancouver', 'São Paulo' or 'Madrid'.\n\n5. Write a query to select all customers who are not from 'Germany' and whose contact ages are under 60 years old.\n\n6. Write a query to select all customers whose contact ages are between 25 and 35 and whose contact name starts with an 'Al'.\n\n# Lessons\n- [[SQL - W2 Select and Filter Data - Introduction]]\n- [[SQL - W2 Select and Filter Data - Creating a Database]]\n- [[SQL - W2 Select and Filter Data - Running Scripts]]\n- [[SQL - W2 Select and Filter Data - SELECT Statement]]\n- [[SQL - W2 Select and Filter Data - WHERE Clause and Comparison Operators]]\n- SQL - W2 Select and Filter Data - Logical Operators\n- Next: [[SQL - W2 Select and Filter Data - ORDER BY]]\n- [[SQL - W2 Select and Filter Data - SQL Comments]]\n- [[SQL - W2 Select and Filter Data - Note on Semicolons]]\n- [[SQL - W2 Select and Filter Data - Practice Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W2-Select-and-Filter-Data-Note-on-Semicolons":{"title":"SQL - W2 Select and Filter Data - Note on Semicolons","content":"# Select and Filter Data - Note on Semicolons\n\n### Why use semicolons?\n\nSo far we've only been executing a single query at a time but we could run more. A single query does not generally require a semicolon. However when you have multiple SQL statements in a script a semicolon is used to separate each statement. This prevents confusion for SQL about where one statement ends and the next begins.\n\nUsing semicolons is considered a best practice even when they are not strictly required and I will be expecting you to use them in your work for this course.\n\n# Lessons\n- [[SQL - W2 Select and Filter Data - Introduction]]\n- [[SQL - W2 Select and Filter Data - Creating a Database]]\n- [[SQL - W2 Select and Filter Data - Running Scripts]]\n- [[SQL - W2 Select and Filter Data - SELECT Statement]]\n- [[SQL - W2 Select and Filter Data - WHERE Clause and Comparison Operators]]\n- [[SQL - W2 Select and Filter Data - Logical Operators]]\n- [[SQL - W2 Select and Filter Data - ORDER BY]]\n- [[SQL - W2 Select and Filter Data - SQL Comments]]\n- SQL - W2 Select and Filter Data - Note on Semicolons\n- Next: [[SQL - W2 Select and Filter Data - Practice Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W2-Select-and-Filter-Data-ORDER-BY":{"title":"SQL - W2 Select and Filter Data - ORDER BY","content":"# Select and Filter Data - ORDER BY\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=1304790b-0894-4c02-90b6-b0f2017793fc\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nThe `ORDER BY` clause is used to sort the result set of a query by one or more columns. It can sort the data in ascending or descending order. By default, it sorts in ascending order. \n\n`ORDER BY` must come after the WHERE clause. This makes sense if we think about it, we do not want to sort the rows until we've already filtered out the ones we don't want.\n\nUsing the `Employees` table from the previous example:\n\n|EmployeeID|Name|Age|Department|\n|---|---|---|---|\n|1|John Doe|28|Marketing|\n|2|Jane Doe|32|HR|\n|3|Alex Ray|45|IT|\n|4|Sara Ali|30|Finance|\n|5|Mia Chen|26|Marketing|\n\nWe can sort the results by columns such as age with:\n\n```sql\nSELECT * FROM Employees\nORDER BY Age;\n```\n##### Expected Output\n| EmployeeID | Name | Age | Department |\n| ---- | ---- | ---- | ---- |\n| 5 | Mia Chen | 26 | Marketing |\n| 1 | John Doe | 28 | Marketing |\n| 4 | Sara Ali | 30 | Finance |\n| 2 | Jane Doe | 32 | HR |\n| 3 | Alex Ray | 45 | IT |\n\nIf we instead wrote:\n\n```sql\nSELECT * FROM Employees\nORDER BY Age DESC;\n```\n\nWe would get the same list but sorted from the highest to lowest age.\n\nIt is also possible to `ORDER BY` multiple columns:\n\n```sql\nSELECT * FROM Employees\nORDER BY Department, Age;\n```\n##### Expected Output:\n| EmployeeID | Name | Age | Department |\n| ---- | ---- | ---- | ---- |\n| 4 | Sara Ali | 30 | Finance |\n| 2 | Jane Doe | 32 | HR |\n| 3 | Alex Ray | 45 | IT |\n| 5 | Mia Chen | 26 | Marketing |\n| 1 | John Doe | 28 | Marketing |\n\nIn this ordered list, employees are sorted by their departments ('Finance', 'HR', 'IT', and 'Marketing'), and within each department, they are sorted by their age from youngest to oldest.\n\n# Practice Questions\n\n7. Write a query to select all customers and order them alphabetically by the customer name.\n\n8. Write a query to select all customers and order them by their Ids from highest to lowest.\n\n# Lessons\n- [[SQL - W2 Select and Filter Data - Introduction]]\n- [[SQL - W2 Select and Filter Data - Creating a Database]]\n- [[SQL - W2 Select and Filter Data - Running Scripts]]\n- [[SQL - W2 Select and Filter Data - SELECT Statement]]\n- [[SQL - W2 Select and Filter Data - WHERE Clause and Comparison Operators]]\n- [[SQL - W2 Select and Filter Data - Logical Operators]]\n- SQL - W2 Select and Filter Data - ORDER BY\n- Next: [[SQL - W2 Select and Filter Data - SQL Comments]]\n- [[SQL - W2 Select and Filter Data - Note on Semicolons]]\n- [[SQL - W2 Select and Filter Data - Practice Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W2-Select-and-Filter-Data-Practice-Assignment":{"title":"SQL - W2 Select and Filter Data - Practice Assignment","content":"# Select and Filter Data - Practice Assignment\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=301026b3-0fb6-4a0b-abc9-b0f2017793d2\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Practice Questions\n\nIn addition to the practice problems from the lesson pages, write queries to do the following:\n\n9. Select customers who are not from 'Berlin' or 'London' and are younger than 50. Order the results by age in descending order.\n\n10. Select customers whose customer name starts with an 'L' or an 'M'. Order the results by Id in descending order.\n\n### Submission Instructions\n\nPlease put all SQL queries for the practice questions into a single SQL file. Use comments to label each query with its respective question number. Submit this .sql file for your assignment on Canvas.\n\n# Lessons\n- [[SQL - W2 Select and Filter Data - Introduction]]\n- [[SQL - W2 Select and Filter Data - Creating a Database]]\n- [[SQL - W2 Select and Filter Data - Running Scripts]]\n- [[SQL - W2 Select and Filter Data - SELECT Statement]]\n- [[SQL - W2 Select and Filter Data - WHERE Clause and Comparison Operators]]\n- [[SQL - W2 Select and Filter Data - Logical Operators]]\n- [[SQL - W2 Select and Filter Data - ORDER BY]]\n- [[SQL - W2 Select and Filter Data - SQL Comments]]\n- [[SQL - W2 Select and Filter Data - Note on Semicolons]]\n- SQL - W2 Select and Filter Data - Practice Assignment","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W2-Select-and-Filter-Data-Running-Scripts":{"title":"SQL - W2 Select and Filter Data - Running Scripts","content":"# Select and Filter Data - Running Scripts\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=3b6bc768-5330-4f2b-9f42-b0f20177a502\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nTo get started with hands-on practice, you'll need data to populate your database. We'll do this by running a SQL script. Follow these steps to execute the script on your database:\n\n1. **Open the SQL File**:\n    - Open the script file \u003ca href=\"https://github.com/kellerflint/Course-Resources/blob/hugo/content/SQL-Files/CustomerScript.sql\" target=\"_blank\"\u003eCustomerScript.sql (github.com)\u003c/a\u003e. It contains the commands to create tables and insert data into them.\n2. **Access phpMyAdmin**:\n    - From the WebHostingForStudents Client Area, find your website and click the \"Log in to cPanel\" button.\n    - Once in cPanel, click \"phpMyAdmin\" under the \"Databases\" section.\n3. **Connect to Your Database**:\n    - Make sure you're connected to the database that you want to run the script on. In this case, it will be the database you created for this class. In phpMyAdmin you can select the database by clicking on its name on the left side of the screen.\n4. **Run the Script**:\n    - To run SQL code, click the \"SQL\" tab in the horizontal menu at the top of the screen.\n    - Copy over the entire contents of the SQL script into the editor. \n    - Click the \"Go\" button at the bottom right. This will create the tables defined in the script and populate them with data.\n5. **Verify the Data**:\n    - After running the script, check to ensure that tables are created and data is inserted. You can do this by running a simple SELECT query, like `SELECT * FROM tablename;.\n\n# Lessons\n- [[SQL - W2 Select and Filter Data - Introduction]]\n- [[SQL - W2 Select and Filter Data - Creating a Database]]\n- SQL - W2 Select and Filter Data - Running Scripts\n- Next: [[SQL - W2 Select and Filter Data - SELECT Statement]]\n- [[SQL - W2 Select and Filter Data - WHERE Clause and Comparison Operators]]\n- [[SQL - W2 Select and Filter Data - Logical Operators]]\n- [[SQL - W2 Select and Filter Data - ORDER BY]]\n- [[SQL - W2 Select and Filter Data - SQL Comments]]\n- [[SQL - W2 Select and Filter Data - Note on Semicolons]]\n- [[SQL - W2 Select and Filter Data - Practice Assignment]]\n","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W2-Select-and-Filter-Data-SELECT-Statement":{"title":"SQL - W2 Select and Filter Data - SELECT Statement","content":"# Select and Filter Data - SELECT Statement\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=aa477a38-2f05-4bf1-9aaf-b0f201779f3c\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## Database Basics Refresher\n\nDatabases exist to help us store and manage large amounts of information in an organized way. In SQL this data is organized into tables consisting of rows and columns. Each table in a database represents a different entity, such as customers, products, or orders. The rows in the table represent individual records, and the columns represent the attributes of these entities.\n##### Example Table: Customers\n| CustomerID | FirstName | LastName | Email               |\n|------------|-----------|----------|---------------------|\n| 1          | John      | Doe      | johndoe@email.com   |\n| 2          | Jane      | Smith    | janesmith@email.com |\n| 3          | Alex      | Johnson  | alexj@email.com     |\n\n## SELECT Statements\n\nThe `SELECT` statement is used to retrieve data from a database. It allows you to specify exactly which data you want to fetch from a table.\n\n##### Basic SELECT Syntax\n\n```sql\nSELECT column1, column2, ...\nFROM table_name;\n```\n\n##### Selecting Specific Columns\n\nTo retrieve specific columns from a table, list the column names separated by commas. For example the query:\n\n```sql\nSELECT FirstName, LastName\nFROM Customers;\n```\n##### Expected Output:\n| FirstName | LastName |\n| ---- | ---- |\n| John | Doe |\n| Jane | Smith |\n| Alex | Johnson |\n##### Selecting All Columns\n\nTo select all columns from a table, use the asterisk `*` symbol:\n\n```sql\nSELECT *\nFROM Customers;\n```\n\nThis query will result in the entire Customers table being displayed.\n\n# Practice Questions\n\n1. Select only the contact's name and age columns from the Customer table.\n\n# Lessons\n- [[SQL - W2 Select and Filter Data - Introduction]]\n- [[SQL - W2 Select and Filter Data - Creating a Database]]\n- [[SQL - W2 Select and Filter Data - Running Scripts]]\n- SQL - W2 Select and Filter Data - SELECT Statement\n- Next: [[SQL - W2 Select and Filter Data - WHERE Clause and Comparison Operators]]\n- [[SQL - W2 Select and Filter Data - Logical Operators]]\n- [[SQL - W2 Select and Filter Data - ORDER BY]]\n- [[SQL - W2 Select and Filter Data - SQL Comments]]\n- [[SQL - W2 Select and Filter Data - Note on Semicolons]]\n- [[SQL - W2 Select and Filter Data - Practice Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W2-Select-and-Filter-Data-SQL-Comments":{"title":"SQL - W2 Select and Filter Data - SQL Comments","content":"# Select and Filter Data - SQL Comments\n\nComments in SQL are used to explain sections of SQL statements, or to prevent execution of SQL statements. They are helpful for documentation purposes and making code more readable.\n\n## Types of Comments:\n\n#### Single-Line Comments\n\n```sql\n-- This is a single-line comment\nSELECT * FROM Employees;\n```\n#### Multi-Line Comments:\n\n```sql\n/* This is a multi-line comment\n   that covers multiple lines */\nSELECT * FROM Employees;\n\n```\n\nComments are a crucial part of writing maintainable, understandable SQL code, especially in complex queries or when working in teams. They allow you to explain why a certain SQL statement is used, or to temporarily disable parts of SQL code during testing and development.\n\n# Lessons\n- [[SQL - W2 Select and Filter Data - Introduction]]\n- [[SQL - W2 Select and Filter Data - Creating a Database]]\n- [[SQL - W2 Select and Filter Data - Running Scripts]]\n- [[SQL - W2 Select and Filter Data - SELECT Statement]]\n- [[SQL - W2 Select and Filter Data - WHERE Clause and Comparison Operators]]\n- [[SQL - W2 Select and Filter Data - Logical Operators]]\n- [[SQL - W2 Select and Filter Data - ORDER BY]]\n- SQL - W2 Select and Filter Data - SQL Comments\n- Next: [[SQL - W2 Select and Filter Data - Note on Semicolons]]\n- [[SQL - W2 Select and Filter Data - Practice Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W2-Select-and-Filter-Data-WHERE-Clause-and-Comparison-Operators":{"title":"SQL - W2 Select and Filter Data - WHERE Clause and Comparison Operators","content":"# Select and Filter Data - WHERE Clause and Comparison Operators\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=10ae282e-3ce2-4f40-81b7-b0f201779467\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nThe WHERE clause in SQL is used to filter records from a table, returning only those that meet a specific condition. \n### Basics of the WHERE Clause \n\nThe WHERE clause follows the syntax: \n\n```sql\nSELECT column1, column2, ... FROM table_name \nWHERE condition;\n```\n\n### Comparison Operators\n\nThere are many different types of operators that can be used in our condition to filter what rows we get back based on the data they contain.\n\nThe first type are the comparison operators. These are used to compare values in a column with other values or expressions. These include:\n- `=` : Equal to\n- `\u003c` `\u003e` or `!` `=` : Not equal to\n- `\u003e` : Greater than\n- `\u003c` : Less than\n- `\u003e` `=` : Greater than or equal to\n- `\u003c` `=` : Less than or equal to\n\nFor example, assume we have a table `Employees` with the following data:\n\n|EmployeeID|Name|Age|Department|\n|---|---|---|---|\n|1|John Doe|28|Marketing|\n|2|Jane Doe|32|HR|\n|3|Alex Ray|45|IT|\n|4|Sara Ali|30|Finance|\n\nTo get details of employees from the 'Marketing' department we could write:\n\n```sql\nSELECT * FROM Employees\nWHERE Department = 'Marketing';\n```\n##### Expected Output:\n|EmployeeID|Name|Age|Department|\n|---|---|---|---|\n|1|John Doe|28|Marketing|\n\nIf we wanted to find all employees who are not in the 'HR' department we could write:\n\n```sql\nSELECT * FROM Employees\nWHERE Department \u003c\u003e 'HR';\n```\n##### Expected Output:\n|EmployeeID|Name|Age|Department|\n|---|---|---|---|\n|1|John Doe|28|Marketing|\n|3|Alex Ray|45|IT|\n|4|Sara Ali|30|Finance|\n\nIf we wanted to see information for employees over the age of 30 we could write:\n\n```sql\nSELECT * FROM Employees \nWHERE Age \u003e 30;\n```\n##### Expected Output:\n| EmployeeID | Name | Age | Department |\n| ---- | ---- | ---- | ---- |\n| 2 | Jane Doe | 32 | HR |\n| 3 | Alex Ray | 45 | IT |\n# Practice Questions\n\n2. Write a query to select all customers who are from 'Germany'.\n\n3. Write a query to select all customers whose contact age is less than or equal to 20.\n\n# Lessons\n- [[SQL - W2 Select and Filter Data - Introduction]]\n- [[SQL - W2 Select and Filter Data - Creating a Database]]\n- [[SQL - W2 Select and Filter Data - Running Scripts]]\n- [[SQL - W2 Select and Filter Data - SELECT Statement]]\n- SQL - W2 Select and Filter Data - WHERE Clause and Comparison Operators\n- Next: [[SQL - W2 Select and Filter Data - Logical Operators]]\n- [[SQL - W2 Select and Filter Data - ORDER BY]]\n- [[SQL - W2 Select and Filter Data - SQL Comments]]\n- [[SQL - W2 Select and Filter Data - Note on Semicolons]]\n- [[SQL - W2 Select and Filter Data - Practice Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W3-Magic-Store-Database-Overview":{"title":"SQL - W3 Magic Store Database Overview","content":"\n# Magic Store Database Overview\n\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=ff2760b3-299f-459d-853e-b0fb000eac4a\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## Initialize the Magic Store Database\n\n- DROP the tables from your previous assignment(s), if necessary\n- Run the following script to populate your database -\u003e \u003ca href=\"https://github.com/kellerflint/Course-Resources/blob/hugo/content/SQL-Files/MagicStoreScript.sql\" target=\"_blank\"\u003eMagicStoreScript (github.com)\u003c/a\u003e\n\n## Magic Store Database Overview\n\n**You may not understand all the details of these tables yet. Don't worry!** We're about to go through it all in detail in the next few lessons. For now, here's a quick overview you can reference back to as needed when working on the practice questions for this section.\n\nThe Magic Store Database contains the records of a store that sells potions, ingredients and enchanted items to witches and wizards across the world. These tables are structured to handle a typical e-commerce scenario, where clients place orders for products, and each order can contain multiple products. The `OrderProduct` table is a joining table that manages the many-to-many relationship between orders and products.\n\n##### 1. `Supplier` Table:\n- `ID`: Unique identifier for each supplier.\n- `Name`: Name of the supplier.\n- `Address`: Physical address of the supplier.\n- `PhoneNumber`: Contact phone number of the supplier.\n##### 2. `Product` Table:\n- `ID`: Unique identifier for each product.\n- `Name`: Name of the product.\n- `Price`: Price of the product.\n##### 3. `Client` Table:\n- `ID`: Unique identifier for each client.\n- `FirstName`: First name of the client.\n- `LastName`: Last name of the client.\n- `AccountCreated`: The date when the client's account was created.\n##### 4. `Order` Table:\n- `ID`: Unique identifier for each order.\n- `OrderedOn`: The date when the order was placed.\n- `ClientID`: Identifies the client who placed the order.\n##### 5. `OrderProduct` Table:\n- `OrderID`: Identifies the order. It is linked to the `Order` table.\n- `ProductID`: Identifies the product. It is linked to the `Product` table.\n- `Quantity`: How many of each product are included in an order.\n\n\n\n\n# Lessons\n- [[SQL - W3 Table JOINs - Introduction]]\n- [[SQL - W3 Table JOINs - DROP Tables]]\n- SQL - W3 Magic Store Database Overview\n- Next: [[SQL - W3 Table JOINs - One-to-Many Relationships]]\n- [[SQL - W3 Table JOINs - JOIN Tables with One-to-Many Relationships]]\n- [[SQL - W3 Table JOINs - Filter and Sort with JOINs]]\n- [[SQL - W3 One-to-Many JOINs - Practice Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W3-One-to-Many-JOINs-Practice-Assignment":{"title":"SQL - W3 One-to-Many JOINs - Practice Assignment","content":"\n# One-to-Many JOINs - Practice Assignment\n\n5. Write a query to list all orders and the clients who placed them, sorted by the order date.\n\n6. Write a query to list all suppliers and their products, where the supplier's phone number starts with '+14', sorted by the supplier name.\n\n7. Write a query to list all orders placed by the client with the first name 'Amity' in 2021 (i.e. between '2021-01-01' and '2021-12-31'). Include the client first and last name, the order date and the order ID. \n\t(*You can compare dates strings just like numbers! For example `WHERE Date \u003e '2021-12-01'` would return only rows where the `Date` was more recent than December 1st, 2021. `BETWEEN` also works with dates*)\n\n8. Write a query to list all orders placed between '2022-01-01' and '2022-12-31' by clients whose accounts were created on or after '2022-01-01', including the order ID, the client's first and last name, the date the order was placed and the date the client's account was created.\n\n# Lessons\n- [[SQL - W3 Table JOINs - Introduction]]\n- [[SQL - W3 Table JOINs - DROP Tables]]\n- [[SQL - W3 Magic Store Database Overview]]\n- [[SQL - W3 Table JOINs - One-to-Many Relationships]]\n- [[SQL - W3 Table JOINs - JOIN Tables with One-to-Many Relationships]]\n- [[SQL - W3 Table JOINs - Filter and Sort with JOINs]]\n- SQL - W3 One-to-Many JOINs - Practice Assignment","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W3-Table-JOINs-DROP-Tables":{"title":"SQL - W3 Table JOINs - DROP Tables","content":"\n# DROP Tables\n\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=d3ae98bb-32d4-4e55-b179-b0fb000eabf2\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## DROP Tables\n\nThe `DROP` command in SQL is used to remove objects from the database. It's a powerful command that can permanently delete tables, databases, views, or indexes. For the time being, we're just interested in using it to remove tables.\n\n```sql\nDROP TABLE tableName; -- Where tableName is the name of the table you want to drop\n```\n\nThe `DROP` command is typically used during database cleanup, restructuring, or when you need to remove test tables or obsolete database objects. It's part of the standard housekeeping tasks a database engineer or administrator might perform.\n\nA few important things to keep in mind when using `DROP`:\n- **Irreversible**: The `DROP` command is irreversible, meaning once you execute it, you can't undo the operation or recover the dropped data unless you have a backup.\n- **Use with Caution**: Given its permanent nature, it should be used with caution. Always ensure you have a backup or are absolutely certain you no longer need the data you're removing.\n- **Permissions**: You need appropriate permissions to execute a `DROP` command on database objects. You have these permission on your databases but in the real world you may not.\n\n\n\n# Lessons\n- [[SQL - W3 Table JOINs - Introduction]]\n- SQL - W3 Table JOINs - DROP Tables\n- Next: [[SQL - W3 Magic Store Database Overview]]\n- [[SQL - W3 Table JOINs - One-to-Many Relationships]]\n- [[SQL - W3 Table JOINs - JOIN Tables with One-to-Many Relationships]]\n- [[SQL - W3 Table JOINs - Filter and Sort with JOINs]]\n- [[SQL - W3 One-to-Many JOINs - Practice Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W3-Table-JOINs-Filter-and-Sort-with-JOINs":{"title":"SQL - W3 Table JOINs - Filter and Sort with JOINs","content":"# Filter and Sort with JOINs\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=68a81ea3-08b4-42c1-8467-b0fb000ebe38\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## Using WHERE and ORDER BY with JOINs\n\nWe can still utilize the clauses from previous lessons to filter and sort on joined data. \n\nFor this example, we'll use the `Authors` and `Books` tables with a one-to-many relationship. Each author can write multiple books, but each book has only one author.\n### Authors Table:\n|AuthorID|AuthorName|\n|---|---|\n|1|J.K. Rowling|\n|2|George Orwell|\n|3|Leo Tolstoy|\n### Books Table:\n| BookID | Title | AuthorID |\n| ---- | ---- | ---- |\n| 101 | Harry Potter | 1 |\n| 102 | 1984 | 2 |\n| 103 | Animal Farm | 2 |\n| 104 | War and Peace | 3 |\n| 105 | Anna Karenina | 3 |\n### SQL JOIN with Filter and Sort\n\nCreate a query that joins these tables and:\n1. Filters to show only books written by a specific author (e.g., George Orwell).\n2. Sorts the results by the book's title.\n\n```sql\nSELECT Books.Title, Authors.AuthorName FROM Books\nJOIN Authors ON Books.AuthorID = Authors.AuthorID\nWHERE Authors.AuthorName = 'George Orwell'\nORDER BY Books.Title;\n```\n##### Expected Output:\n|Title|AuthorName|\n|---|---|\n|Anna Karenina|Leo Tolstoy|\n|War and Peace|Leo Tolstoy|\n### Explanation:\n\n1. **SELECT Clause**: Retrieves the book titles and their corresponding author names.\n2. **JOIN Operation**: Joins the `Books` and `Authors` tables using the `AuthorID` as the common field.\n3. **WHERE Clause**: Filters the results to include only those books written by 'Leo Tolstoy'.\n4. **ORDER BY Clause**: Sorts the resulting list of books by their titles in ascending order.\n\n`JOIN` must come before our `WHERE` and `ORDER BY` clauses because we need to have access to both the `AuthorName` and `Title` in order to filter and sort them.\n\n# Practice Questions\n\n3. Write a query to list all products supplied by 'Enchanted Wares Ltd.' including the supplier name along with the product names and prices. Sort the results by product name (Z to A).\n\n4. Write a query to list all suppliers and their products, sorted by the supplier's name and product price.\n\n# Lessons\n- [[SQL - W3 Table JOINs - Introduction]]\n- [[SQL - W3 Table JOINs - DROP Tables]]\n- [[SQL - W3 Magic Store Database Overview]]\n- [[SQL - W3 Table JOINs - One-to-Many Relationships]]\n- [[SQL - W3 Table JOINs - JOIN Tables with One-to-Many Relationships]]\n- SQL - W3 Table JOINs - Filter and Sort with JOINs\n- Next: [[SQL - W3 One-to-Many JOINs - Practice Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W3-Table-JOINs-Introduction":{"title":"SQL - W3 Table JOINs - Introduction","content":"# Table JOINs - Introduction\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=de230526-3b5f-4f66-b8b5-b0fb000eac18\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nIn this section, we will:\n- Interact with databases that have multiple related tables.\n- Discuss the different types of relationships tables can have with each other and how these relationships shape the way we retrieve and interpret data. \n- Explore the commands used to combine information from different tables, filter it based on specific criteria, and order it to get the results we want.\n\n\n# Lessons\n- SQL - W3 Table JOINs - Introduction\n- Next: [[SQL - W3 Table JOINs - DROP Tables]]\n- [[SQL - W3 Magic Store Database Overview]]\n- [[SQL - W3 Table JOINs - One-to-Many Relationships]]\n- [[SQL - W3 Table JOINs - JOIN Tables with One-to-Many Relationships]]\n- [[SQL - W3 Table JOINs - Filter and Sort with JOINs]]\n- [[SQL - W3 One-to-Many JOINs - Practice Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W3-Table-JOINs-JOIN-Tables-with-One-to-Many-Relationships":{"title":"SQL - W3 Table JOINs - JOIN Tables with One-to-Many Relationships","content":"\n# JOIN Tables with One-to-Many Relationships\n\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=851a0a62-1d48-4d30-9bff-b0fb000eb927\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## Understanding JOINs in One-to-Many Relationships\n\nGiven our bookstore database example from the previous lesson:\n### Authors Table:\n| AuthorID | AuthorName |\n| ---- | ---- |\n| 1 | J.K. Rowling |\n| 2 | George Orwell |\n| 3 | Leo Tolstoy |\n### Books Table:\n|BookID|Title|AuthorID|\n|---|---|---|\n|101|Harry Potter|1|\n|102|1984|2|\n|103|Animal Farm|2|\n|104|War and Peace|3|\n|105|Anna Karenina|3|\n\nIn order to retrieve data that spans across these two tables, we use the SQL JOIN operation. Let's see how we can use the JOIN command to fetch the list of books along with their authors' names.\n\n```sql\nSELECT Books.Title, Authors.AuthorName FROM Books\nJOIN Authors ON Books.AuthorID = Authors.AuthorID; \n```\n##### Expected Output:\n| Title         | AuthorName    |\n| ------------- | ------------- |\n| Harry Potter  | J.K. Rowling  |\n| 1984          | George Orwell |\n| Animal Farm   | George Orwell |\n| War and Peace | Leo Tolstoy   |\n| Anna Karenina | Leo Tolstoy   |\n\nThis query effectively combines data from the `Books` and `Authors` tables by linking books to their respective authors by the AuthorID. The `JOIN` operation, facilitated by the `ON` clause, ensures that each book is matched with its author. The selected columns `Books.Title` and `Authors.AuthorName` are displayed in the resulting output.\n\nTo understand exactly how the SQL JOIN command works in our Authors and Books example, let's break down the query piece by piece.\n#### 1. `SELECT Books.Title, Authors.AuthorName`\n- **Purpose**: This part of the query specifies what data we want to retrieve. Here, we are asking for the `Title` from the `Books` table and the `AuthorName` from the `Authors` table.\n- **Action**: It tells the database to look at these two columns and prepare to output data from them.\n#### 2. `FROM Books`\n- **Purpose**: This clause specifies the table from which to retrieve data, which in this case is the `Books` table.\n- **Action**: It sets the context for the SQL query, indicating that the data will be selected from the `Books` table.\n#### 3. `JOIN Authors`\n- **Purpose**: Indicates that we want to combine rows from our existing table(s) (e.g., the `Books` table in this case) with rows from the `Authors` table.\n- **Action**: It initiates the action to combine data from the two tables based on a related column.\n#### 4. `ON Books.AuthorID = Authors.AuthorID`\n- **Purpose**: This is the condition on which the JOIN will be performed. To function, the JOIN needs to know what column it should use to match records between the two tables. `ON` is used to map this relationship. In this case, we are joining the tables based on the `AuthorID` column, which is common to both tables.\n- **Action**: It matches each row in the `Books` table with the corresponding row in the `Authors` table where the `AuthorID` is the same.\n\n# Practice Questions\n\n1. Write a query to list all orders, including the order ID, the date the order was placed, and the first and last name of the client who placed the order./\n\n2. Write a query to display a list of all products, including their name, price, and the name and address of their supplier.\n\n\n\n# Lessons\n- [[SQL - W3 Table JOINs - Introduction]]\n- [[SQL - W3 Table JOINs - DROP Tables]]\n- [[SQL - W3 Magic Store Database Overview]]\n- [[SQL - W3 Table JOINs - One-to-Many Relationships]]\n- SQL - W3 Table JOINs - JOIN Tables with One-to-Many Relationships\n- Next: [[SQL - W3 Table JOINs - Filter and Sort with JOINs]]\n- [[SQL - W3 One-to-Many JOINs - Practice Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W3-Table-JOINs-One-to-Many-Relationships":{"title":"SQL - W3 Table JOINs - One-to-Many Relationships","content":"# Introduction to One-to-Many Relationships\n\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=b1546239-e7ce-4a5d-9068-b0fb000eabca\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=b8901214-6404-4e52-9e50-b0fb000ee542\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## What is a One-to-Many Relationship?\n\nIn relational databases, a one-to-many relationship is the most fundamental type of relationship. This relationship exists when a record in one table can be associated with multiple records in another table.\n\nFor example, consider a database of a bookstore. Here, we have two tables: `Authors` and `Books`. An author can write multiple books, but each book is written by only one author. This is a classic one-to-many relationship.\n\n### Authors Table:\n|AuthorID|AuthorName|\n|---|---|\n|1|J.K. Rowling|\n|2|George Orwell|\n|3|Leo Tolstoy|\n### Books Table:\n|BookID|Title|AuthorID|\n|---|---|---|\n|101|Harry Potter|1|\n|102|1984|2|\n|103|Animal Farm|2|\n|104|War and Peace|3|\n|105|Anna Karenina|3|\n### Understanding the Direction of the Relationship\n\nIt's important to understand exactly why this is a one-to-many relationship. Why can we can have many books per author but only one author per book? The structure of the table tells us this is how the relationship must work. Here's how:\n\n- **Single Author, Multiple Books**: Each author in the `Authors` table can write multiple books. An author's ID can appear in many rows in the `Books` table. For instance, if \"George Orwell\" writes two books, his ID appears next to each of those books in the `Books` table. Therefore an author can have many books.\n\n- **Single Book, Single Author**: Conversely, each book in the `Books` table is associated with only one author. For each row in the `Books` table, there is only a place for one AuthorID. For example, \"1984\" can only be associated with one author, George Orwell.\n\n### Terminology: Primary Keys and Foreign Keys\n\n#### Primary Key\n- A primary key is a unique identifier assigned to each record in a table. It ensures that each record can be distinctly identified, meaning no two records can have the same primary key value. This key is essential for maintaining the uniqueness and integrity of the data within the table.\n- In the `Authors` table, `AuthorID` serves as the primary key. Each author has a unique `AuthorID` that distinguishes it from others.\n- In the `Books` table, the `BookID` serves as the primary key. Each book has a unique `BookID` that distinguishes it from others.\n#### Foreign Key\n- A foreign key is a field (or collection of fields) in one table that uniquely identifies a row of another table. Put simply, a foreign key is a reference to the primary key of another table. It establishes a link between tables, showing how records in one table relate to records in another.\n- In the `Books` table, `AuthorID` serves as a foreign key. It references the `AuthorID` from the `Authors` table.\n- This foreign key creates the link between each book and its author, establishing the one-to-many relationship.\n\n# Lessons\n- [[SQL - W3 Table JOINs - Introduction]]\n- [[SQL - W3 Table JOINs - DROP Tables]]\n- [[SQL - W3 Magic Store Database Overview]]\n- SQL - W3 Table JOINs - One-to-Many Relationships\n- Next: [[SQL - W3 Table JOINs - JOIN Tables with One-to-Many Relationships]]\n- [[SQL - W3 Table JOINs - Filter and Sort with JOINs]]\n- [[SQL - W3 One-to-Many JOINs - Practice Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W4-HR-Database-Overview":{"title":"SQL - W4 HR Database Overview","content":"\n# HR Database Overview\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=1bda4f91-4cd6-4dad-b0e3-b10100555862\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## Initialize the HR Database\n\n- DROP the tables from your previous assignment(s), if necessary\n\t- See [[SQL - W3 Table JOINs - DROP Tables]] for a refresher on dropping tables.\n- Run the following script to populate your database -\u003e \u003ca href=\"https://github.com/kellerflint/Course-Resources/blob/hugo/content/SQL-Files/HRScript.sql\"\u003eHRScript.sql (github.com)\u003c/a\u003e\n\t- See [[SQL - W2 Select and Filter Data - Running Scripts]] for a refresher on running DB scripts.\n## HR Database Overview\n\nThe HR Database is designed to mirror a typical business's human resources data management system. It's structured to handle employee data, departmental divisions, and job details. Here's a brief description of each table:\n\n##### 1. `employees` Table:\n\n- `employee_id`: Unique identifier for each employee (Primary Key).\n- `first_name`: First name of the employee.\n- `last_name`: Last name of the employee.\n- `email`: Email address of the employee.\n- `phone_number`: Contact phone number of the employee.\n- `hire_date`: The date when the employee was hired.\n- `job_id`: Identifier for the job role of the employee, referencing `jobs` (Foreign Key).\n- `salary`: The salary of the employee.\n- `manager_id`: The ID of the employee's manager, referencing `employees` (Foreign Key).\n- `department_id`: Identifier for the department the employee belongs to, referencing `departments` (Foreign Key).\n\n##### 2. `jobs` Table:\n\n- `job_id`: Unique identifier for each job role (Primary Key).\n- `job_title`: Title of the job role.\n- `min_salary`: Minimum salary for the job role.\n- `max_salary`: Maximum salary for the job role.\n\n##### 3. `departments` Table:\n\n- `department_id`: Unique identifier for each department (Primary Key).\n- `department_name`: Name of the department.\n- `location_id`: Identifier for the location of the department, referencing `locations` (Foreign Key).\n\n##### 4. `dependents` Table:\n\n- `dependent_id`: Unique identifier for each dependent (Primary Key).\n- `first_name`: First name of the dependent.\n- `last_name`: Last name of the dependent.\n- `relationship`: The relationship of the dependent to the employee.\n- `employee_id`: Identifier for the employee to whom the dependent is related, referencing `employees` (Foreign Key).\n\n##### 5. `regions` Table:\n\n- `region_id`: Unique identifier for each region (Primary Key).\n- `region_name`: Name of the region.\n\n##### 6. `countries` Table:\n\n- `country_id`: Unique identifier for each country (Primary Key).\n- `country_name`: Name of the country.\n- `region_id`: Identifier for the region to which the country belongs, referencing `regions` (Foreign Key).\n\n##### 7. `locations` Table:\n\n- `location_id`: Unique identifier for each location (Primary Key).\n- `street_address`: Physical address of the location.\n- `postal_code`: Postal code of the location.\n- `city`: City where the location is based.\n- `state_province`: State or province of the location.\n- `country_id`: Identifier for the country of the location, referencing `countries` (Foreign Key).\n\n\n\n# Lessons\n- [[SQL - W4 Querying and Analysis for HR Database Assignment Introduction]]\n- [[SQL - W4 JOINing Multiple Tables]]\n- [[SQL - W7 Table Aliasing]]\n- SQL - W4 HR Database Overview\n- Next: [[SQL - W4 Querying and Analysis for HR Database Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W4-JOINing-Multiple-Tables":{"title":"SQL - W4 JOINing Multiple Tables","content":"\n# JOINing Multiple Tables\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=237a7770-4291-4e02-97c9-b15d01311852\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\" aria-description=\"Multiple Table Joins\" \u003e\u003c/iframe\u003e\n\n\n\n# Lessons\n- [[SQL - W4 Querying and Analysis for HR Database Assignment Introduction]]\n- SQL - W4 JOINing Multiple Tables\n- Next: [[SQL - W7 Table Aliasing]]\n- [[SQL - W4 HR Database Overview]]\n- [[SQL - W4 Querying and Analysis for HR Database Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W4-Querying-and-Analysis-for-HR-Database-Assignment":{"title":"SQL - W4 Querying and Analysis for HR Database Assignment","content":"\n# Querying and Analysis for HR Database Assignment\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=531fbeb7-cdae-4733-a89c-b1010055588d\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nEvery questions should be answered with exactly one query. You will need exactly one SELECT statement per question. Be sure to provide complete and correct answers to each questions.\n# Section 1: Understand the Data Structure\n\n**Question 1:** Write a query to list all the regions available in the `regions` table.\n\n**Question 2:** Find all countries in the `countries` table that are part of the region with `region_id` 2. Display the country names and their respective region IDs.\n\n**Question 3:** List the job titles from the `jobs` table where the minimum salary is greater than 5,000 a month. Order the results by the minimum salary in ascending order.\n\n**Question 4**: Retrieve the city and street address of all locations from the `locations` table that have the `country_id` of of 'UK'. Sort the results by city in alphabetical order.\n\n**Question 5**: Identify all departments in the `departments` table that have the `location_id` 1700. Display the department name and location ID.\n\n**Question 6**: Find all employees whose last name starts with an 'H'. Display their employee ID, first name, last name, email, and salary.\n\n**Question 7**: Display the first and last names of dependents along with the ID of the employee they are related to. Order the results by employee ID in descending order.\n\n# Section 2: Construct Relational Queries\n\n**Question 8**: List all dependents along with the names of the employees they are dependent on. Display each dependent's first and last name, and the first and last name of the associated employee.\n\n**Question 9**: Which employees work in the 'Shipping' department? Display the department name along with each employee's IDs, first name, and last name.\n\n**Question 10**: Find all locations in the 'Americas' region. Display the country name, state/province, city and street address.  List them in alphabetical order by the state/province.\n\n**Question 11**: List the first names, last names, job titles and salaries a of all employees who have 'Manager' in their job title.\n\n**Question 12**: Display the names and job titles of employees who work in any city other than 'Seattle'. Display the name of the city they work in as well.\n\n# Section 3: Perform Data Analysis\n\n***Use a multi-line comment to write explanations in the same .sql file as your queries.***\n\n**NOTE: Please do not use commands that have not been covered in class!** Aggregation functions, GROUP BY and sub-querying could be helpful, but are beyond the scope of this assignment. Draw conclusions using the tools we have discussed so far.\n\n**Question 13**: In what months are most employees hired? Provide a single query to justify your answer.\n*You can use `MONTH(some_date_column)` to extract just the month from a date.*\n\n**Question 14**: Why is Steven King's manager ID null? Is it a case of missing data or was it intentionally left blank? Write a one to three sentence explanation. Provide a single query to prove your answer.\n\n**Question 15**: Which cities seem to pay the highest salaries? Provide the query you wrote to explore the relationship between location and salary. Write a few sentences explaining how you came to this conclusion based on your query results.\n*It might be useful to order by two columns. Think about which two would make the most sense. See [[SQL - W2 Select and Filter Data - ORDER BY]] for a refresher on ordering by multiple columns.*\n\n**IMPORTANT**: Make sure you copy your **ENTIRE SCRIPT** into PHPMyAdmin and run it against the database before you submit. Confirm that everything works as expected. **If you submit a script that does not run it will receive a ZERO!** Start early so you have time to get help and make corrections if needed!\n\n# Lessons\n- [[SQL - W4 Querying and Analysis for HR Database Assignment Introduction]]\n- [[SQL - W4 JOINing Multiple Tables]]\n- [[SQL - W7 Table Aliasing]]\n- [[SQL - W4 HR Database Overview]]\n- SQL - W4 Querying and Analysis for HR Database Assignment","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W4-Querying-and-Analysis-for-HR-Database-Assignment-Introduction":{"title":"SQL - W4 Querying and Analysis for HR Database Assignment Introduction","content":"\n# Querying and Analysis for HR Database Assignment Introduction\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=15d9c2bc-ef2e-4654-bf9f-b101005557e5\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nThis assignment is divided into three sections, each aimed at developing a different aspect of your querying and analytical skills.\n\nIt is **ESSENTIAL** that you start project assignments early so you have time to get help!\n\n## Section 1: Understand the Data Structure\n\nIn this section, you will familiarize yourself with the structure of our sample HR database. Your tasks will involve writing SQL queries to explore the contents of each tables. You will:\n- Retrieve and observe data from single tables.\n- Use WHERE clauses to filter data based on specific conditions.\n- Apply ORDER BY to sort data and make your result sets more readable.\n\n## Section 2: Construct Relational Queries\n\nThis section is designed to make you think about how to retrieve meaningful information from multiple tables to answer a question. You will:\n- Use SELECT statements to gather data across related tables.\n- Employ logical and comparison operators to refine your search criteria.\n- Perform table joins to consolidate data from different sources.\n\n## Section 3: Perform Data Analysis\n\nThis final section of this assignment moves beyond the syntax of SQL and requires you to start thinking like a data analyst. You will:\n- Write queries to answer high-level questions.\n- Analyze query results to identify patterns.\n- Compare and contrast data to draw conclusions using your best judgement.\n\n# Lessons\n- SQL - W4 Querying and Analysis for HR Database Assignment Introduction\n- Next: [[SQL - W4 JOINing Multiple Tables]]\n- [[SQL - W7 Table Aliasing]]\n- [[SQL - W4 HR Database Overview]]\n- [[SQL - W4 Querying and Analysis for HR Database Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W5-Data-Types-and-Nullability":{"title":"SQL - W5 Data Types and Nullability","content":"# Data Types and Nullability\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=adeeea60-d527-4575-b612-b1160003d874\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nIn addition to showing basic structure of tables and their relationships, Entity Relationship Diagrams (ERDs) can also give us more insight into the columns. This can include data types for each column and whether a column can have null values. Let's explore these concepts with an example diagram.\n\n### College Courses Diagram\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/college_courses_erd.png\"\u003e\n\n\n## Data Types\n\nEach column in a table has a specific data type that dictates the kind of data it can hold to the right of its name. There are many different types but some of the most common are:\n\n- **Strings**: These are sequences of characters like the words in a sentence. In SQL they are referred to as `VARCHAR` (variable character). VARCHARs can be given a maximum number of characters that they can accept in parathesis. A `VARCHAR(255)` could hold 255 characters.\n- **Datetimes**: This type represents dates and times. The keyword is SQL is `DATETIME`.\n- **Integers**: These are whole numbers. The keyword in SQL is `INT`.\n- **Decimals**: These are numbers with a fractional part, such as currency or averages. Decimals are given two parameters, a size and a number of digits that can appear after the decimal point. `DECIMAL(4,2)` could hold 4 total digits with two of those digits appearing after the decimal point. So `DECIMAL(4,2)` could hold any value between -99.99 and 99.99.\n\nA full list of data types can be found here at W3Schools: [SQL Data Types for MySQL, SQL Server, and MS Access (w3schools.com)](https://www.w3schools.com/sql/sql_datatypes.asp)\n\n## Nullability\n\nIn addition to data types, ERDs can indicate whether a column can have a null value. A null value represents the absence of a value. Whether a field can be null or not depends on the business rules and data requirements:\n\n- **Nullable Fields**: These are optional and are marked with a question mark (`?`) after the data type in this diagram.\n- **Non-Nullable Fields**: These are required and have no question mark.\n\nTaking a look at the College Courses Diagram above, you'll notice that each column in the tables has a defined data type. Some fields, like `phone_number` in the `student` table, are marked as nullable (indicated by `varchar(11)?`), meaning it is not mandatory for a record to have this information.\n\n# Practice Questions\n\n5. Suppose we need to record the `office_location` for each `instructor` in the College Courses Diagram. What data type should this column be and should it be allowed to be null? Why?\n6. Imagine we want a `last_accessed` column  in the `enrollment` table that tracks when a student last signed into their class on Canvas. What data type should this column be and should it be allowed to be null? Why?\n# Lessons\n- [[SQL - W5 Introduction to Entity Relationship Diagrams]]\n- [[SQL - W5 Entity Relationship Diagram Structure]]\n- [[SQL W5 Representing Relationships]]\n- SQL - W5 Data Types and Nullability\n- **Next**: [[SQL - W5 Querying from ERDs]]\n- [[SQL - W5 Entity Relationship Diagrams Practice Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W5-Entity-Relationship-Diagram-Structure":{"title":"SQL - W5 Entity Relationship Diagram Structure","content":"# Entity Relationship Diagram Structure\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=e3fcaaa2-10b5-48b3-8e8e-b1160003d8d1\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nEntity Relationship Diagrams come in various formats, but they share common elements that help us understand the architecture of a database. As we progress through this course, we will explore different ways to represent ERDs. For now, let's focus on a simple example using an HR database.\n\n### HR Entity Relationship Diagram\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/\n\tImages/hr_db_erd.png\"\u003e\n\n*Source:* https://www.sqltutorial.org/sql-sample-database/\n\nThe data here should look familiar, it's the diagram we used for the HR database in the Querying and Analysis assignment.\n\n## Table Structure\n\nThe following properties are universal for all ERDs:\n- **Tables as Boxes**: Each table in the database is represented as a box.\n- **Rows and Columns**: Inside each box, the rows represent the columns of the table. When diagraming, we don't care about what specific rows of data (e.g. the actual information for each employees). Instead we care about the structure of the tables themselves and how they relate to each other.\n- **Primary Key Notation**: In this ERD, the primary key for each table is indicated with an asterisk (`*`). Not every diagram uses an `*`, but they will always denote the primary key in some way.\n\nTake the `countries` table for example. It is represented as a box in the HR Entity Relationship Diagram.\n- **Columns**: Inside the box, you will find `country_id`, `country_name`, and `region_id`. While they are represented as rows in the diagram, these are actually the columns of the table in the database.\n- **Primary Key**: The `country_id` is the primary key, as denoted by the `*` before it.\n\n# Practice Questions \n\n1. According to the HR Entity Relationship Diagram, what will the columns be for the `countries` table?\n2. Which column is the primary key for the `countries` table? How is the primary key shown in this diagram?\n# Lessons\n- [[SQL - W5 Introduction to Entity Relationship Diagrams]]\n- SQL - W5 Entity Relationship Diagram Structure\n- **Next**: [[SQL W5 Representing Relationships]]\n- [[SQL - W5 Data Types and Nullability]]\n- [[SQL - W5 Querying from ERDs]]\n- [[SQL - W5 Entity Relationship Diagrams Practice Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W5-Entity-Relationship-Diagrams-Practice-Assignment":{"title":"SQL - W5 Entity Relationship Diagrams Practice Assignment","content":"# Entity Relationship Diagrams Practice Assignment\n\nIn addition to the practice problems from the lesson pages, write queries to do the following:\n\n9. (3pts) The Digital Movie Rentals Diagram below has at least 7 problems. Some of the problems are logical (things that don't make sense for data we're tracking) and some are structural (fundamental issues with the columns or relationships in the diagram). List each problem you find and briefly explain either why it's a issue or how you could fix it. Identify at least 3.\n10. (Optional Challenge - 0pts) See if you can identify all 7 of the problems in the diagram.\n\n### Digital Movie Rentals Diagram\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/movie_rentals_problems_erd.png\"\u003e\n\n# Submission Instructions\n\nPlease label each question with its number and write all answers in a single file using your text editor of choice. Copy your answers over to the submission area for the assignment on Canvas.\n# Lessons\n- [[SQL - W5 Introduction to Entity Relationship Diagrams]]\n- [[SQL - W5 Entity Relationship Diagram Structure]]\n- [[SQL W5 Representing Relationships]]\n- [[SQL - W5 Data Types and Nullability]]\n- [[SQL - W5 Querying from ERDs]]\n- SQL - W5 Entity Relationship Diagrams Practice Assignment\n\n\n","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W5-Introduction-to-Entity-Relationship-Diagrams":{"title":"SQL - W5 Introduction to Entity Relationship Diagrams","content":"# Introduction to Entity Relationship Diagrams\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=2a747c43-2bbe-4729-92cb-b1160003e4a0\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nEntity Relationship Diagrams (ERDs) are a fundamental part of database design and architecture. They provide a visual representation of the data and how entities within a database relate to each other. Using ERDs can make it much easier to grasp the structure of a database without having to examine each table individually. In this section you will learn to read these diagrams, understand the relationships between tables, and apply this knowledge to create and query tables.\n# Lessons\n- SQL - W5 Introduction to Entity Relationship Diagrams\n- Next: [[SQL - W5 Entity Relationship Diagram Structure]]\n- [[SQL W5 Representing Relationships]]\n- [[SQL - W5 Data Types and Nullability]]\n- [[SQL - W5 Querying from ERDs]]\n- [[SQL - W5 Entity Relationship Diagrams Practice Assignment]]\n","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W5-Querying-from-ERDs":{"title":"SQL - W5 Querying from ERDs","content":"# Querying from ERDs\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=1b0c0429-8f12-4f00-928d-b1160003d851\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Practice questions\n\n### College Courses Diagram\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/college_courses_erd.png\"\u003e\n\n7. Write a SQL query to retrieve the start date of all classes taught by the instructor with the `first_name` \"Tina\".\n8. Write a SQL query to retrieve the `annual_salary` of all instructors who teach classes that contain \"software\" anywhere in the `title`.\n\n*You won't be able to run these since I haven't given you a database for this diagram. Write the queries based on what's in the College Courses Diagram.*\n# Lessons\n- [[SQL - W5 Introduction to Entity Relationship Diagrams]]\n- [[SQL - W5 Entity Relationship Diagram Structure]]\n- [[SQL W5 Representing Relationships]]\n- [[SQL - W5 Data Types and Nullability]]\n- SQL - W5 Querying from ERDs\n- Next: [[SQL - W5 Entity Relationship Diagrams Practice Assignment]]\n","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W5-Representing-Relationships":{"title":"SQL W5 Representing Relationships","content":"# Representing Relationships\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=b9a748d1-1060-4e42-85a0-b1160003d89b\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\nEntity Relationship Diagrams (ERDs) not only show us the entities and their attributes but also how these entities interact with each other. The lines connecting the tables represent these relationships and are necessary to understand the database's structure. Let's break down how to read these relationships using the HR database ERD from our previous lessons.\n\n### HR Entity Relationship Diagram\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/hr_db_erd.png\"\u003e\n\n*Source:* https://www.sqltutorial.org/sql-sample-database/\n## Interpreting Relationships\n\nThe lines between the tables indicate how the entities relate to each other. You will notice different endings on these lines, such as a single straight line or a forked line. These symbols tell us about the type and direction of the relationship.\n### One-to-Many Relationship\n\nConsider the relationship between the `employees` and `jobs` tables in the HR Entity Relationship Diagram:\n- **Single Line**: This represents the \"one\" side of the relationship.\n- **Forked Line**: This symbolizes the \"many\" side of the relationship.\n\nThis is known as \"Crow's Foot Notation\" and is widely used in database diagraming.\n\nWhen we read the diagram:\n- **From Jobs to Employees**: Each job can have many employees. This is because the line ends with a forked symbol at the `employees` table.\n- **From Employees to Jobs**: Each employee has only one job, indicated by the single line ending at the `jobs` table.\n\nThis visualization helps us understand that each employee is associated with one job and each job title can be held by multiple employees.\n\n### Employees-Dependents Example\n\nNow, let's look at the relationship between `employees` and `dependents`. Based on the HR Entity Relationship Diagram, what is the relationship between these two table? Try to find out for yourself before continuing.\n\nTo understand the relationship, do the following:\n1. Look at the `employees` table. The line connecting it to `dependents` ends with a pronged line at the `dependents` table. This indicates that an employee can have many dependents.\n2. Now, examine the `dependents` table. The line connecting it to `employees` ends with a single straight line. This indicates that a dependent can only have one employee.\n\nThis relationships is also suggested by the structure of the table itself. We can see that `dependents` has a column for `employee_id`, suggesting that each dependent can be linked to a single employee.\n\n# Practice Questions\n\n3. What is the relationship between `regions` and `countries`? What steps did you take to determine this from the diagram?\n4. What is the relationship between `departments` and `employees`? What steps did you take to determine this from the diagram?\n# Lessons\n- [[SQL - W5 Introduction to Entity Relationship Diagrams]]\n- [[SQL - W5 Entity Relationship Diagram Structure]]\n- SQL W5 Representing Relationships\n- **Next**: [[SQL - W5 Data Types and Nullability]]\n- [[SQL - W5 Querying from ERDs]]\n- [[SQL - W5 Entity Relationship Diagrams Practice Assignment]]\n\n","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W7-JOIN-Tables-with-Many-to-Many-Relationships":{"title":"SQL - W7 JOIN Tables with Many-to-Many Relationships","content":"# JOIN Tables with Many-to-Many Relationships\n\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=c59e6ff3-602a-4508-9a6f-b0fb000ebc41\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## Understanding JOINs in Many-to-Many Relationships\n\nGiven our bookstore database example from the previous lesson:\n### Authors Table:\n|AuthorID|AuthorName|\n|---|---|\n|1|Luna Bellatrix|\n|2|Orion Stardust|\n|3|Celeste Moon |\n### Books Table:\n|BookID|Title|\n|---|---|\n|101|Whispers of the Galaxy|\n|102|Secrets of the Eclipse|\n|103|Shadows in the Cosmos|\n|104|Starlight Symphony|\n|105|Moonlit Myth|\n### BooksAuthors Joining Table:\n|BookID|AuthorID|\n|---|---|\n|101|1|\n|102|2|\n|103|2|\n|103|1|\n|104|3|\n|105|3|\n\nTo retrieve data that spans across these three tables, we use the SQL JOIN operation twice. Let's see how we can use the JOIN command to fetch the list of books along with their authors' names now that we're representing the data with a many-to-many relationship.\n\n### Understanding the Many to Many Relationship\n\n```sql\nSELECT Books.Title, Authors.AuthorName FROM Books\nJOIN BooksAuthors ON Books.BookID = BooksAuthors.BookID\nJOIN Authors ON BooksAuthors.AuthorID = Authors.AuthorID;\n```\n##### Expected Output:\n|Title|AuthorName|\n|---|---|\n|Whispers of the Galaxy|Luna Bellatrix|\n|Secrets of the Eclipse|Orion Stardust|\n|Shadows in the Cosmos|Orion Stardust|\n|Shadows in the Cosmos|Luna Bellatrix|\n|Starlight Symphony|Celeste Moon |\n|Moonlit Myth|Celeste Moon |\n#### 1. `SELECT Books.Title, Authors.AuthorName FROM Books`\n- This command retrieves the `Title` from the `Books` table and the `AuthorName` from the `Authors` table to display book titles alongside their authors' names.\n- It also sets `Books` as the table from which the query starts, establishing the context for the JOIN operations that follow.\n\n#### 2. `JOIN BooksAuthors ON Books.BookID = BooksAuthors.BookID`\n- The first JOIN operation. It joins the `Books` table with the `BooksAuthors` joining table, based on the `BookID`. This operation matches each book with its corresponding entries in the `BooksAuthors` table.\n\n#### 3. `JOIN Authors ON BooksAuthors.AuthorID = Authors.AuthorID`\n- The second JOIN operation. It joins the intermediate result (which includes the information from `Books` and `BooksAuthors`) with the `Authors` table. The join is based on the `AuthorID`, linking each entry in the BooksAuthors table with its respective author.\n\n# Practice Questions\n\n**Use the Magic Store Database ([[SQL - W3 Magic Store Database Overview]]) to complete the practice questions for week.**\n\n1. **Display Order Details with Product Names:** Write a query to display details of each order, including the order ID, the date it was placed, and the names of the products in the order.\n\n# Lessons\n- [[SQL - W7 Many-to-Many Relationships]]\n- SQL - W7 JOIN Tables with Many-to-Many Relationships\n- Next: [[SQL - W7 Table Aliasing]]\n- [[SQL - W7 Practice Assignment]]\n","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W7-Many-to-Many-Relationships":{"title":"SQL - W7 Many-to-Many Relationships","content":"# Many-to-Many Relationships\n\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=c5b32412-9c53-4db8-a649-b0fb000ed371\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## Introduction to Many-to-Many Relationships\n\nA many-to-many relationship in databases occurs when multiple records in one table are associated with multiple records in another table. This kind of relationship often requires a third table, known as a junction, associative or joining table (depending on who you ask). For this class, I will use the term joining table. The joining table is used to break a many-to-many relationship down into two one-to-many relationships.\n\nLet's explore this concept with a new set of tables for books and authors that represent a many-to-many relationship.\n\n### Authors Table:\n|AuthorID|AuthorName|\n|---|---|\n|1|Luna Bellatrix|\n|2|Orion Stardust|\n|3|Celeste Moon |\n### Books Table:\n|BookID|Title|\n|---|---|\n|101|Whispers of the Galaxy|\n|102|Secrets of the Eclipse|\n|103|Shadows in the Cosmos|\n|104|Starlight Symphony|\n|105|Moonlit Myth|\n### BooksAuthors Joining Table:\n|BookID|AuthorID|\n|---|---|\n|101|1|\n|102|2|\n|103|2|\n|103|1|\n|104|3|\n|105|3|\n\nIn the `BooksAuthors` table, both `BookID` and `AuthorID` are used together to create unique combinations, allowing for the representation of multiple authors per book and vice versa.\n\n### Understanding the many-to-many Relationship\n\n1. **First One-to-Many**: Each record in the `Authors` table can be linked to multiple records in the `BooksAuthors` table. For example, AuthorID 2 is linked to BookID 102 and 103. This is a one-to-many relationship from Authors to BooksAuthors.\n\n2. **Second One-to-Many**: Similarly, each record in the `Books` table can be linked to multiple records in the `BooksAuthors` table. For instance, BookID 103 is linked to AuthorID 1 and 2. This is another one-to-many relationship, but from Books to BooksAuthors.\n\n3. **The Many-to-Many**: These two one-to-many relationships combine to form a many-to-many relationship. An author can write multiple books, and a book can be written by multiple authors. The `BooksAuthors` table serves as a bridge, linking each book to one or more authors and each author to one or more books.\n\n# Lessons\n- SQL - W7 Many-to-Many Relationships\n- Next: [[SQL - W7 JOIN Tables with Many-to-Many Relationships]]\n- [[SQL - W7 Table Aliasing]]\n- [[SQL - W7 Practice Assignment]]\n","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W7-Practice-Assignment":{"title":"SQL - W7 Practice Assignment","content":"\n**Use the Magic Store Database ([[SQL - W3 Magic Store Database Overview]]) to complete the practice questions for week.**\n\nIn addition to the practice problems from the lesson pages, write queries to do the following:\n\n2. **Show Products Ordered by a Client:** Write a query to list all products ordered by the client with the ID of 2. Show product names for orders made by this client.\n   \n3. **List All Products with Their Suppliers, Sorted by Supplier Name and Product Price:** Display a list of all products along with their supplier names. Sort the list first by the supplier's name in ascending order, and then by the product's price in descending order.\n\n4. **Show Orders Placed After a Specific Date:** Write a query to display orders placed after '2022-01-01', including order ID, product names, and order date. Sort the results by product name.\n\n5. **List All Orders for 'Elixir of Immortality':** Display all orders that include the 'Elixir of Immortality', showing the order ID and the date the order was placed. Show the most recent orders first.\n\n### Submission Instructions\n\nPlease put all SQL queries for the practice questions into a single SQL file. Use comments to label each query with its respective question number. Submit this .sql file for your assignment on Canvas.\n\n# Lessons\n- [[SQL - W7 Many-to-Many Relationships]]\n- [[SQL - W7 JOIN Tables with Many-to-Many Relationships]]\n- [[SQL - W7 Table Aliasing]]\n- SQL - W7 Practice Assignment\n","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W7-Table-Aliasing":{"title":"SQL - W7 Table Aliasing","content":"\n# Table Aliasing\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=81bef28a-deff-41c0-9675-b0fb000ec500\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## What is Table Aliasing?\n\nTable aliasing involves giving a table in your SQL query a temporary name. This temporary name (aka alias) is often an abbreviation of the full table name. This is particularly useful in queries involving multiple tables because it simplifies the query syntax and makes it easier to read and write.\n\n### Example Using Authors and Books\n\nLet's revisit the Authors and Books tables and see how table aliasing can be applied.\n### Authors Table\n|AuthorID|AuthorName|\n|---|---|\n|1|J.K. Rowling|\n|2|George Orwell|\n|3|Leo Tolstoy|\n### Books Table\n|BookID|Title|AuthorID|\n|---|---|---|\n|101|Harry Potter|1|\n|102|1984|2|\n|103|Animal Farm|2|\n|104|War and Peace|3|\n|105|Anna Karenina|3|\n\nHere's how we might perform a join to get the Titles and Authors using aliasing:\n\n```sql\nSELECT b.Title, a.AuthorName FROM Books b\nJOIN Authors a ON b.AuthorID = a.AuthorID;\n```\n### Explanation:\n\n1. **`Books b`**: Here, `Books` is aliased as `b`. This means that in the rest of the query, we can refer to the `Books` table as `b`.\n2. **`Authors a`**: Similarly, `Authors` is aliased as `a`. Any reference to the `Authors` table can now be made using `a`.\n3. **`b.Title, a.AuthorName`**: Instead of writing `Books.Title` and `Authors.AuthorName`, we use the aliases, making the query more concise.\n4. **`b.AuthorID = a.AuthorID`**: The JOIN condition uses the aliases as a stand in for the full table names as well.\n\n# Lessons\n- [[SQL - W7 Many-to-Many Relationships]]\n- [[SQL - W7 JOIN Tables with Many-to-Many Relationships]]\n- SQL - W7 Table Aliasing\n- Next: [[SQL - W7 Practice Assignment]]\n","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W8-Creating-Entity-Relationship-Diagrams-CREATE-Many-to-Many-Tables":{"title":"SQL - W8 Creating Entity Relationship Diagrams - CREATE Many to Many Tables","content":"# Creating Entity Relationship Diagrams - CREATE Many to Many Tables\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=b488333a-81d2-4859-9854-b11c015d3061\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Practice Questions\n\n2. *(3pts)* Write the CREATE statements for the `pets`, `owners` and `pets_owners` tables in the diagram below. \n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/pets_owners_erd.png\"\u003e\n\n# Lessons\n- [[SQL - W8 Creating Entity Relationship Diagrams - Introduction]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - CREATE One to Many Tables]]\n- Creating Entity Relationship Diagrams - CREATE Many to Many Tables\n- **Next**: [[SQL - W8 Creating Entity Relationship Diagrams - Using Composite Primary Keys]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - Create Entity Relationship Diagrams]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - Practice Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W8-Creating-Entity-Relationship-Diagrams-CREATE-One-to-Many-Tables":{"title":"SQL - W8 Creating Entity Relationship Diagrams - CREATE One to Many Tables","content":"\n# Creating Entity Relationship Diagrams - CREATE One to Many Tables\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=d43d459b-9a76-48bf-bb0d-b11c015d3d30\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Practice Questions\n\n1. *(2pts)* Write the CREATE statements for the `users` and `posts` tables in the diagram below. \n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/users_posts_erd.png\"\u003e\n\n# Lessons\n- [[SQL - W8 Creating Entity Relationship Diagrams - Introduction]]\n- Creating Entity Relationship Diagrams - CREATE One to Many Tables\n- **Next**: [[SQL - W8 Creating Entity Relationship Diagrams - CREATE Many to Many Tables]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - Using Composite Primary Keys]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - Create Entity Relationship Diagrams]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - Practice Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W8-Creating-Entity-Relationship-Diagrams-Create-Entity-Relationship-Diagrams":{"title":"SQL - W8 Creating Entity Relationship Diagrams - Create Entity Relationship Diagrams","content":"# Creating Entity Relationship Diagrams - Create Entity Relationship Diagrams\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=99ed404e-6872-496d-95da-b11c015d3030\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n## Link to the diagraming tool -\u003e https://drawsql.app/\n\n# Practice Questions\n\n3. *(4pts)* Create an entity relationship diagram to represent the SQL script below. *Please check with your instructor and get permission before using any tool other than [drawSQL](https://drawsql.app/)*\n\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/book_store_script_img.png\"\u003e\n\n# Lessons\n- [[SQL - W8 Creating Entity Relationship Diagrams - Introduction]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - CREATE One to Many Tables]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - CREATE Many to Many Tables]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - Using Composite Primary Keys]]\n- SQL - W8 Creating Entity Relationship Diagrams - Create Entity Relationship Diagrams\n- **Next:** [[SQL - W8 Creating Entity Relationship Diagrams - Practice Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W8-Creating-Entity-Relationship-Diagrams-Introduction":{"title":"SQL - W8 Creating Entity Relationship Diagrams - Introduction","content":"# Creating Entity Relationship Diagrams - Introduction\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=f29892e1-352d-4b0c-b6c0-b11c015d2ffb\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Lessons\n- Creating Entity Relationship Diagrams - Introduction\n- **Next**: [[SQL - W8 Creating Entity Relationship Diagrams - CREATE One to Many Tables]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - CREATE Many to Many Tables]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - Using Composite Primary Keys]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - Create Entity Relationship Diagrams]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - Practice Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W8-Creating-Entity-Relationship-Diagrams-Practice-Assignment":{"title":"SQL - W8 Creating Entity Relationship Diagrams - Practice Assignment","content":"# Creating Entity Relationship Diagrams - Practice Assignment\n\nIn addition to the practice problems from the lesson pages, create an entity relationship diagram for the following business scenario using [drawSQL](https://drawsql.app/). *Please check with your instructor and get permission before using any other tool.*\n\n4. *(5pts)* Create an ERD for a chain of lemonade stands needs software to help them track their supplies and employees. Design requirements:\n\t- Each lemonade stand has a street address and a target revenue.\n\t- Lemonade stands can receive many shipments, but a shipment can only go to one lemonade stand. The database should track which shipment is sent to which stand.\n\t- Shipments must always have the date that they were sent. A shipment may also have the date that they were received but this value might be empty if the shipment has not reached a stand yet.\n\t- Each shipment can contain many different supply items (such as lemons, water, napkins, etc.) and a supply item can belong to many shipments. The database should also track how many of each supply item was sent in a shipment.\n\t- Each supply item has a name and a price.\n\t- Lemonade stands can have many employees but an employee can only work at one stand at a time. The database should also track which days of the week an employee works.\n\t- Each employee has a first name, a last name and an age.\n\n***Representing this should require 5 tables. If you find yourself with either more or less, it's likely you need to rethink the design.***\n\n# Submission Instructions\n\nFor questions #1 and #2, please put your SQL queries into a single SQL file. Use comments to label each query with its respective question number.\n\nFor questions #3 and #4, take screenshots of your completed entity relationship diagrams from drawSQL.\n\nUpload the .sql file and each image to the assignment submission on Canvas. *You should be uploading/submitting a total of 3 files for this assignment (the .sql file and the two ERD images).*\n\n# Lessons\n- [[SQL - W8 Creating Entity Relationship Diagrams - Introduction]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - CREATE One to Many Tables]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - CREATE Many to Many Tables]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - Using Composite Primary Keys]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - Create Entity Relationship Diagrams]]\n- Creating Entity Relationship Diagrams - Practice Assignment","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W8-Creating-Entity-Relationship-Diagrams-Using-Composite-Primary-Keys":{"title":"SQL - W8 Creating Entity Relationship Diagrams - Using Composite Primary Keys","content":"# Creating Entity Relationship Diagrams - Using Composite Primary Keys\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=2cde06fb-34b8-4dcc-83f6-b11c015d2fc9\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Using Composite Primary Keys\n\nHow do you know when to use a composite primary key vs create a new unique identifier?\n\nWhen you're creating a joining table there are times where it is appropriate to use a composite primary key and times when you'll want to create a new ID that serves as the primary key. Making this decision is based on what information is required to uniquely identify the relationship. For example, the combination of a Student and a Class will always be unique (i.e. a student cannot have multiple enrollments in the same class). When combined, those two separate keys are sufficient to uniquely identify a record in the StudentClass (or you could call it the enrollment) joining table.\n\nThis is what your CREATE statement would look like. You don't add a new ID for the StudentClass. Instead, you declare both the ClassID and StudentID as primary keys (and foreign keys).\n\n```sql\nCREATE TABLE StudentClass(\n    id INT\n    ClassID INT,\n    StudentID INT,\n    \n    PRIMARY KEY(id),\n    FOREIGN KEY(ClassID) REFERENCES Class(ID),\n    FOREIGN KEY(StudentID) REFERENCES Student(ID)\n);\n```\n\nHowever there are times when the combination of two keys in a table are not enough to create a unique identifier. For example, imagine we had a shopping application where users could make multiple payments on an order to pay it off over time. In that situation, the combination of the UserID and the OrderID would not be enough to establish a unique identifier because we could have multiple payments with the same combination of an order and user made on different dates. Here we would either need to add more fields to our composite primary key to make it unique or instead create a new primary key column rather than use a composite primary key. In the latter case, the OrderID and UserID would remain in the Payments table but only as foreign keys, not primary keys.  \n\nIn that example the code would look like this. We create the new ID field since the OrderID and UserID together still aren't sufficient to uniquely identify the record:\n\n```sql\nCREATE TABLE Payments(\n    ID INT,\n    OrderID INT,\n    UserID INT,\n    AmountPaid DECIMAL(10,2),\n    \n    PRIMARY KEY(ID),\n    FOREIGN KEY(OrderID) REFERENCES Order(ID),\n    FOREIGN KEY(User) REFERENCES User(ID)\n);\n```\n\n# Lessons\n- [[SQL - W8 Creating Entity Relationship Diagrams - Introduction]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - CREATE One to Many Tables]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - CREATE Many to Many Tables]]\n- Creating Entity Relationship Diagrams - Using Composite Primary Keys\n- **Next:** [[SQL - W8 Creating Entity Relationship Diagrams - Create Entity Relationship Diagrams]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - Practice Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W9-Database-Design-Assignment":{"title":"SQL - W9 Database Design Assignment","content":"# Database Design Assignment\n\nFor this assignment, you’ll be going through the entire process of designing, creating and querying a database for a local property management company. This company manages rental properties for landlords in the greater Seattle area for a percentage of the rental income. In order to handle these properties effectively the company needs to organize and track information about their properties and tenants in a database.\n\n**Part 1 (40 pts): Create an Entity Relationship Diagram**. Create an entity relationship diagram that represents the following:\n\n1. Owners have names, phone numbers and a date that they joined the management service.\n2. An owner can have multiple properties managed by the company and a property can have one or more owners.\n3. Properties have a street address and an estimated market value.\n4. Properties have one or more units and a unit can only belong to one property. \n5. Each unit has a unit number and a monthly cost. \n6. A unit can have many tenants, but a tenant can only be in one unit.\n7. Tenants have a first name, last name and email.\n8. A payment has a date and an amount paid. It also must track the user who made the payment and the unit that the payment was made on.\n9. Tenants can make maintenance requests on units. A maintenance request has a description, a severity (1-10) and a completion status (done or not done). It also must track the tenant who made the request and the unit the request was made on.\n\n**Part 2 (20 pts): Create and populate tables**. Write CREATE statements for each table in your diagram. Then insert at least 2 rows of data into every table (although you may want to add more to some of the joining tables). Be sure that the relationships you establish between your tables match the design outlined in your diagram, I'm looking for consistency between your code and your ERD.\n\nAfter your `CREATE` and `INSERT` statements, write a `SELECT * FROM TableName` for each table in your database. Like so:\n```sql\n-- CREATE statements...\n\n-- INSERT statements...\n\nSELECT * FROM Tenants;\nSELECT * FROM Units;\nSELECT * FROM Owners;\n-- and so on for each table ...\n```\n\n# Submission Instructions\n\nFor part 1 of this assignment (and for the [[SQL - W9 Database Design Assignment - Challenge (5 pts Extra Credit)|challenge]], should you choose to attempt it), take a screenshot of your completed entity relationship diagram(s) from drawSQL.\n\nFor part 2 of this assignment, please put your `CREATE`, `INSERT` and `SELECT` SQL queries into a single SQL file.\n\nUpload the .sql file and each ERD image to the assignment submission on Canvas.\n# Lessons\n- [[SQL - W9 ERD \u0026 DB Design Assignment - Introduction]]\n- [[SQL - W9 Database Design Assignment - Database Design Example]]\n- Database Design Assignment\n- Next: [[SQL - W9 Database Design Assignment - Challenge (5 pts Extra Credit)]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W9-Database-Design-Assignment-Challenge-5-pts-Extra-Credit":{"title":"SQL - W9 Database Design Assignment - Challenge (5 pts Extra Credit)","content":"# Database Design Assignment - Challenge (5 pts Extra Credit)\n\nFor this challenge, you will be designing and implementing a database to solve a business problem. To give some exposure to the ways you might use your SQL knowledge in industry, this problem will be roughly based on a real-world application I was tasked with designing and implementing during my first software development internship.\n\n**Background**:\n\nEdanava is a multinational digital consulting company. This means that other large companies hire Edanava to create software solutions for them or their customers. Edanava has grown quickly and, at any given time, has thousands of **sales opportunities** to keep track of with the businesses and organizations that are looking to potentially hire Edanava to implement a technical project. A **sales opportunity** is essentially a deal/sale in the making. It’s how the company tracks the early stages and setup of a deal before the contract is signed and work begins.\n\n**The Problem:**\n\nCurrently the company has no software to track these opportunities. Instead, employees on the sales team typically put each new opportunity in a word document. These documents have no enforced structure and can get very messy. Documents are emailed back and forth between different people on the sales teams which means the data can easily become unreliable or out of date as many people might end up with different versions of the same document. There is no centralized way for managers or salespeople to view or search for sales opportunities or see data or analytics about how many opportunities are closed or in progress. There is also no way to keep employees accountable or help remind them to follow up on opportunities that they may have forgotten about.\n\nNaturally, this lack of structure means that a lot of possible business falls through the cracks. In fact, the company has estimated that it is losing out on upwards of $10 million a year in possible revenue just because of opportunities that are being lost or forgotten about.\n\n**Proposed Solution:**\n\nIn order to address this, the company has decided to create a web application that will allow the sales team to track and manage all of these opportunities in one place. The application will allow salespeople to create opportunities and add information about them. Then the application will assign available salespeople to work on the different steps of an opportunity based on their role on the team and send reminders if too much time has passed since the last step was completed. It will also allow managers to see various analytics about existing opportunities.\n\n**Your Role:**\n\nAs the lead backend developer on this new project, you must architect the database that this new application will need.\n\nThe sales team has given you some example documents to use as a reference with the kind of information they’ll need the application to track (see documents below). All of this information is important and will need to be represented in your database with the appropriate relationships.\n[[SQL - Supplemental Materials - Example Opportunity]]\n[[SQL - Supplemental Materials - Opportunity Steps]]\n[[SQL - Supplemental Materials - Sales Team Members]]\n\n**Assignment Instructions:**\n\nDesign the Database: Create an Entity Relationship Diagram that contains all of the fields and relationships that will exist in your database. Make sure that your database is capable of tracking all the information currently held in the example documents without creating any unnecessary redundancy.\n\nThere is some intentional ambiguity in the design requirements. When you’re unsure of a requirement, use your best judgment to come up with what would make the most sense for the scenario. Feel free to reach out or stop by office hours if you have any questions/concerns. I'm looking forward to seeing what you all come up with!\n\n**Hints**:\n\nThere are many possible ways to design this database depending on the decisions and interpretations you make. However, if you find yourself with fewer than 4 tables or more than 8, it's likely your design is either failing to track important data or it's not using tables efficiently. Either of these is an indication that you should step back and re-evaluate your design.\n\nKeep in mind that fewer tables isn't necessarily better if it comes at the cost of losing data or failing to effectively represent a relationship.\n\n# Submission Instructions\n\n*See the Submission Instructions in [[SQL - W9 Database Design Assignment]].*\n\n# Lessons\n- [[SQL - W9 ERD \u0026 DB Design Assignment - Introduction]]\n- [[SQL - W9 Database Design Assignment - Database Design Example]]\n- [[SQL - W9 Database Design Assignment]]\n- Database Design Assignment - Challenge (5 pts Extra Credit)","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W9-Database-Design-Assignment-Database-Design-Example":{"title":"SQL - W9 Database Design Assignment - Database Design Example","content":"# Database Design Assignment - Database Design Example\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=f7aec8fd-4eb1-4e02-a23f-b12401592fb7\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n*Note: I'm using a different diagraming tool in this video but for your assignment use drawSQL (https://drawsql.app) like in previous weeks.*\n\n# Lessons\n- [[SQL - W9 ERD \u0026 DB Design Assignment - Introduction]]\n- Database Design Assignment - Database Design Example\n- Next: [[SQL - W9 Database Design Assignment]]\n- [[SQL - W9 Database Design Assignment - Challenge (5 pts Extra Credit)]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-W9-ERD-DB-Design-Assignment-Introduction":{"title":"SQL - W9 ERD \u0026 DB Design Assignment - Introduction","content":"# ERD \u0026 DB Design Assignment - Introduction\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=5ac69b2d-794d-4efd-bf92-b12401805881\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Lessons\n- SQL - W9 ERD \u0026 DB Design Assignment - Introduction\n- Next: [[SQL - W9 Database Design Assignment - Database Design Example]]\n- [[SQL - W9 Database Design Assignment]]\n- [[SQL - W9 Database Design Assignment - Challenge (5 pts Extra Credit)]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-ZCUT-Creating-Tables-in-ERDs":{"title":"SQL - ZCUT Creating Tables in ERDs","content":"# Creating Tables in ERDs\n\n\u003ciframe src=\"https://egator.hosted.panopto.com/Panopto/Pages/Embed.aspx?id=29da4567-e32d-4981-a177-b1160003ee40\u0026autoplay=false\u0026offerviewer=true\u0026showtitle=true\u0026showbrand=true\u0026captions=false\u0026interactivity=all\" height=\"405\" width=\"720\" style=\"border: 1px solid #464646;\" allowfullscreen allow=\"autoplay\" aria-label=\"Panopto Embedded Video Player\"\u003e\u003c/iframe\u003e\n\n# Practice questions\n\n### College Courses Diagram\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/SQL-Files/Images/college_courses_erd.png\"\u003e\n\n2. Write CREATE statements for the `student` and `instructor` tables. \n3. INSERT two rows of data into each table.\n\t*Dates are put in quotes like strings/varchars. They are formatted with the Year-Month-Day. For example February 26th, 2024 would be `'2024-02-26'`.*\n","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-ZCUT-W10-Advanced-Querying-Topics-JOIN-Refresher":{"title":"SQL - ZCUT W10 Advanced Querying Topics JOIN Refresher","content":"# Advanced Querying Topics Part 1 - JOIN Refresher\n\nNeed a refresher on JOINs? See our lessons on [[SQL - W3 Table JOINs - One-to-Many Relationships]].\n# Practice Questions\n\n1. Write a query to retrieve all orders placed in August 2022. Include the ID of the order, the client's last name, and the date of the order. Expected result:\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/Images/AQR2.png\"\u003e\n\n2. Write a query to display the product name, product price and supplier name for each product that cost less than 100. Expected result:\n\u003cimg src=\"https://raw.githubusercontent.com/kellerflint/Class-Intro-SQL/hugo/content/Images/AQR1.png\"\u003e\n\n# Lessons\n- [[SQL - W10 Advanced Querying - Introduction]]\n- Advanced Querying Topics Part 1 - JOIN Refresher\n- Next: [[SQL - Advanced Querying Topics Part 1 - Aggregate Functions]]\n- [[SQL - W10 Advanced Querying - Column Aliasing]]\n- [[SQL - W10 Advanced Querying - Calculating Values]]\n- [[SQL - W10 Advanced Querying Topics - Practice Assignment]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]},"/SQL-_-Lesson-Index":{"title":"SQL _ Lesson Index","content":"# SQL For Data Analytics Lesson Index\n\nModule One:\n- Introduction to Databases and Relational Tables\n- [[SQL - W2 Select and Filter Data - Introduction]]\n- [[SQL - W3 Table JOINs - Introduction]]\n- [[SQL - W4 Querying and Analysis for HR Database Assignment Introduction]]\n\nModule Two:\n- [[SQL - W5 Introduction to Entity Relationship Diagrams]]\n- Create and Populate Tables (still in canvas)\n- [[SQL - W7 Many-to-Many Relationships]]\n- [[SQL - W8 Creating Entity Relationship Diagrams - Introduction]]\n- [[SQL - W9 ERD \u0026 DB Design Assignment - Introduction]]\n\nModule Three:\n- [[SQL - W10 Advanced Querying - Introduction]]\n\n[[SQL - Final Exam]]","lastmodified":"2024-06-02T23:20:19.205799852Z","tags":[]}}